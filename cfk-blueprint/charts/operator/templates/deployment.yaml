{{- $_ := required "Namespace is required" .Release.Namespace }}
{{- $_ := required "Name of operator is required." .Values.name }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ include "confluent-operator.name" . }}
    app.kubernetes.io/name: {{ include "confluent-operator.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: "confluent-operator"
    helm.sh/chart: {{ include "confluent-operator.chart" . }}
    version: {{ .Values.image.tag }}
  name: {{ .Values.name }}
  namespace:  {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: "confluent-operator"
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        {{- range $key, $value := .Values.pod.annotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      labels:
        app: "confluent-operator"
        app.kubernetes.io/name: "confluent-operator"
        app.kubernetes.io/instance: {{ .Release.Name }}
        confluent-platform: "true"
        version: {{ .Values.image.tag }}
        {{- range $key, $value := .Values.pod.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      {{- if not (empty $.Values.affinity) }}
      affinity:
{{ toYaml .Values.affinity | trim | indent 8 }}
      {{- end }}
      {{- if not (empty $.Values.tolerations) }}
      tolerations:
{{ toYaml .Values.tolerations | trim | indent 6 }}
      {{- end }}
      {{- if .Values.podSecurity.enabled }}
      securityContext:
{{ toYaml .Values.podSecurity.securityContext | indent 8 }}
      {{- end }}
      containers:
      - args:
        - --debug={{.Values.debug}}
        {{- if gt (int (.Values.replicas)) 1 }}
        - --enable-leader-election
        {{- end }}
        name: {{ .Values.name }}
        image: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{.Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        readinessProbe:
          httpGet:
            port: 8080
            path: /readyz
        livenessProbe:
          httpGet:
            port: 8080
            path: /healthz
        resources:
{{ toYaml .Values.resources | trim | indent 10 }}
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: NODEIP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: DD_ENTITY_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.uid
          - name: DEPLOYMENT_NAME
            value: {{ .Values.name }}
      {{- if .Values.containerSecurity.enabled }}
        securityContext:
{{ toYaml .Values.containerSecurity.securityContext | indent 10 }}
      {{- end }}
      {{- if and .Values.imagePullSecretRef (not .Values.serviceAccount.create) }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecretRef }}
      {{- end }}
      serviceAccountName: {{ template "confluent-operator.service-account" . }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      restartPolicy: Always
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
