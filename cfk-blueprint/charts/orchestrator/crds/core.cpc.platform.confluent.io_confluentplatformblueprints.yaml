---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: confluentplatformblueprints.core.cpc.platform.confluent.io
spec:
  group: core.cpc.platform.confluent.io
  names:
    categories:
    - all
    - confluent
    - cpc
    - cpccore
    kind: ConfluentPlatformBlueprint
    listKind: ConfluentPlatformBlueprintList
    plural: confluentplatformblueprints
    shortNames:
    - cbp
    - bp
    - confluentbp
    - blueprint
    singular: confluentplatformblueprint
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ConfluentPlatformBlueprint is the Schema for the confluentplatformblueprints
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ConfluentPlatformBlueprintSpec defines the desired state
              of ConfluentPlatformBlueprint resource.
            properties:
              certificateStoreConfigRefs:
                description: certificateStore defines the storing mechanism for all
                  certificates.
                items:
                  description: ObjectRef specifies a reference another Confluent Platform
                    CR
                  properties:
                    name:
                      description: name is the name of the object
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    namespace:
                      description: Namespace is the namespace of the object. Defaults
                        to the current namespace of the object making the reference
                        to.
                      maxLength: 255
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                  required:
                  - name
                  type: object
                type: array
              components:
                description: components defines how different CP components will be
                  configured and deployed.
                properties:
                  connectCluster:
                    description: connectCluster specifies how connect cluster should
                      be configured.
                    properties:
                      classRef:
                        description: classRef is the reference to the class for the
                          cluster component.
                        properties:
                          name:
                            description: name is the name of the object
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          namespace:
                            description: Namespace is the namespace of the object.
                              Defaults to the current namespace of the object making
                              the reference to.
                            maxLength: 255
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                        required:
                        - name
                        type: object
                      externalAccess:
                        description: externalAccess configures the clusters external
                          access
                        properties:
                          dnsConfig:
                            description: dnsConfig specifies the DNS config for the
                              cluster.
                            properties:
                              subdomain:
                                description: subdomain specifies the subdomain for
                                  the cluster FQDN.
                                minLength: 1
                                type: string
                            type: object
                          enabled:
                            description: enabled enables external access.
                            type: boolean
                          externalTrafficPolicy:
                            description: externalTrafficPolicy specifies the external
                              traffic policy for the load balancer service if the
                              external access type is loadBalancer. Valid options
                              are `Local` and `Cluster`. This takes precedence over
                              the global one.
                            enum:
                            - Local
                            - Cluster
                            type: string
                        required:
                        - enabled
                        type: object
                      mountedSecrets:
                        description: mountedSecrets specifies the secrets injected
                          to the cluster component.
                        properties:
                          blueprint:
                            description: blueprint specifies blueprint provides the
                              secrets.
                            properties:
                              credentialStoreRefs:
                                description: credentialStoreRefs specifies the list
                                  of credentialStoreRef.
                                items:
                                  description: MountedSecretCredentialStoreRef defines
                                    the credentialStoreRef for the mounted secrets.
                                  properties:
                                    keyItems:
                                      description: keyItems are key and path names.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    name:
                                      description: name defines the name of the CredentialStoreRef
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                            required:
                            - credentialStoreRefs
                            type: object
                          providerType:
                            description: providerType specifies where the mounted
                              secrets come from.
                            enum:
                            - deployment
                            - blueprint
                            type: string
                        required:
                        - blueprint
                        - providerType
                        type: object
                    required:
                    - classRef
                    type: object
                  controlCenterCluster:
                    description: controlCenterCluster specifies how the controlCenter
                      cluster should be configured
                    properties:
                      classRef:
                        description: classRef is the reference to the class for the
                          cluster component.
                        properties:
                          name:
                            description: name is the name of the object
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          namespace:
                            description: Namespace is the namespace of the object.
                              Defaults to the current namespace of the object making
                              the reference to.
                            maxLength: 255
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                        required:
                        - name
                        type: object
                      externalAccess:
                        description: externalAccess configures the clusters external
                          access
                        properties:
                          dnsConfig:
                            description: dnsConfig specifies the DNS config for the
                              cluster.
                            properties:
                              subdomain:
                                description: subdomain specifies the subdomain for
                                  the cluster FQDN.
                                minLength: 1
                                type: string
                            type: object
                          enabled:
                            description: enabled enables external access.
                            type: boolean
                          externalTrafficPolicy:
                            description: externalTrafficPolicy specifies the external
                              traffic policy for the load balancer service if the
                              external access type is loadBalancer. Valid options
                              are `Local` and `Cluster`. This takes precedence over
                              the global one.
                            enum:
                            - Local
                            - Cluster
                            type: string
                        required:
                        - enabled
                        type: object
                      mountedSecrets:
                        description: mountedSecrets specifies the secrets injected
                          to the cluster component.
                        properties:
                          blueprint:
                            description: blueprint specifies blueprint provides the
                              secrets.
                            properties:
                              credentialStoreRefs:
                                description: credentialStoreRefs specifies the list
                                  of credentialStoreRef.
                                items:
                                  description: MountedSecretCredentialStoreRef defines
                                    the credentialStoreRef for the mounted secrets.
                                  properties:
                                    keyItems:
                                      description: keyItems are key and path names.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    name:
                                      description: name defines the name of the CredentialStoreRef
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                            required:
                            - credentialStoreRefs
                            type: object
                          providerType:
                            description: providerType specifies where the mounted
                              secrets come from.
                            enum:
                            - deployment
                            - blueprint
                            type: string
                        required:
                        - blueprint
                        - providerType
                        type: object
                    required:
                    - classRef
                    type: object
                  kafkaCluster:
                    description: kafkaCluster specifies how the kafka cluster should
                      be configured.
                    properties:
                      classRef:
                        description: classRef is the reference to the class for the
                          cluster component.
                        properties:
                          name:
                            description: name is the name of the object
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          namespace:
                            description: Namespace is the namespace of the object.
                              Defaults to the current namespace of the object making
                              the reference to.
                            maxLength: 255
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                        required:
                        - name
                        type: object
                      mountedSecrets:
                        description: mountedSecrets specifies the secrets injected
                          to the cluster component.
                        properties:
                          blueprint:
                            description: blueprint specifies blueprint provides the
                              secrets.
                            properties:
                              credentialStoreRefs:
                                description: credentialStoreRefs specifies the list
                                  of credentialStoreRef.
                                items:
                                  description: MountedSecretCredentialStoreRef defines
                                    the credentialStoreRef for the mounted secrets.
                                  properties:
                                    keyItems:
                                      description: keyItems are key and path names.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    name:
                                      description: name defines the name of the CredentialStoreRef
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                            required:
                            - credentialStoreRefs
                            type: object
                          providerType:
                            description: providerType specifies where the mounted
                              secrets come from.
                            enum:
                            - deployment
                            - blueprint
                            type: string
                        required:
                        - blueprint
                        - providerType
                        type: object
                    required:
                    - classRef
                    type: object
                  kafkaRestCluster:
                    description: kafkaRestCluster specifies how the kafkaRest cluster
                      should be configured
                    properties:
                      classRef:
                        description: classRef is the reference to the class for the
                          cluster component.
                        properties:
                          name:
                            description: name is the name of the object
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          namespace:
                            description: Namespace is the namespace of the object.
                              Defaults to the current namespace of the object making
                              the reference to.
                            maxLength: 255
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                        required:
                        - name
                        type: object
                      externalAccess:
                        description: externalAccess configures the clusters external
                          access
                        properties:
                          dnsConfig:
                            description: dnsConfig specifies the DNS config for the
                              cluster.
                            properties:
                              subdomain:
                                description: subdomain specifies the subdomain for
                                  the cluster FQDN.
                                minLength: 1
                                type: string
                            type: object
                          enabled:
                            description: enabled enables external access.
                            type: boolean
                          externalTrafficPolicy:
                            description: externalTrafficPolicy specifies the external
                              traffic policy for the load balancer service if the
                              external access type is loadBalancer. Valid options
                              are `Local` and `Cluster`. This takes precedence over
                              the global one.
                            enum:
                            - Local
                            - Cluster
                            type: string
                        required:
                        - enabled
                        type: object
                    required:
                    - classRef
                    type: object
                  kafkaRestProxyCluster:
                    description: kafkaRestProxyCluster specifies how the kafkaRestProxy
                      cluster should be configured
                    properties:
                      classRef:
                        description: classRef is the reference to the class for the
                          cluster component.
                        properties:
                          name:
                            description: name is the name of the object
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          namespace:
                            description: Namespace is the namespace of the object.
                              Defaults to the current namespace of the object making
                              the reference to.
                            maxLength: 255
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                        required:
                        - name
                        type: object
                      externalAccess:
                        description: externalAccess configures the external access
                          for Kafka Rest Proxy.
                        properties:
                          dnsConfig:
                            description: dnsConfig specifies the DNS config for the
                              cluster.
                            properties:
                              subdomain:
                                description: subdomain specifies the subdomain for
                                  the cluster FQDN.
                                minLength: 1
                                type: string
                            type: object
                          enabled:
                            description: enabled enables external access.
                            type: boolean
                          externalTrafficPolicy:
                            description: externalTrafficPolicy specifies the external
                              traffic policy for the load balancer service if the
                              external access type is loadBalancer. Valid options
                              are `Local` and `Cluster`. This takes precedence over
                              the global one.
                            enum:
                            - Local
                            - Cluster
                            type: string
                          serviceAffinity:
                            description: serviceAffinity specifies the service affinity
                              configuration.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: 'annotations is a map of string key and
                                  value pairs. It specifies the session affinity annotation
                                  for its ingress service. More info: http://kubernetes.io/docs/user-guide/annotations.'
                                type: object
                                x-kubernetes-map-type: granular
                              sessionAffinity:
                                default: None
                                description: 'sessionAffinity defines the Kubernetes
                                  session affinity. The valid options are `ClientIP`
                                  and `None`. `ClientIP` enables the client IP-based
                                  session affinity. The default value is `None`. More
                                  info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies.'
                                enum:
                                - ClientIP
                                - None
                                type: string
                              sessionAffinityConfig:
                                description: sessionAffinityConfig contains the configurations
                                  of the session affinity.
                                properties:
                                  clientIP:
                                    description: clientIP contains the configurations
                                      of Client IP based session affinity.
                                    properties:
                                      timeoutSeconds:
                                        description: timeoutSeconds specifies the
                                          seconds of ClientIP type session sticky
                                          time. The value must be >0 && <=86400(for
                                          1 day) if ServiceAffinity == "ClientIP".
                                          Default value is 10800(for 3 hours).
                                        format: int32
                                        type: integer
                                    type: object
                                type: object
                            type: object
                        required:
                        - enabled
                        type: object
                      mountedSecrets:
                        description: mountedSecrets specifies the secrets injected
                          to the cluster component.
                        properties:
                          blueprint:
                            description: blueprint specifies blueprint provides the
                              secrets.
                            properties:
                              credentialStoreRefs:
                                description: credentialStoreRefs specifies the list
                                  of credentialStoreRef.
                                items:
                                  description: MountedSecretCredentialStoreRef defines
                                    the credentialStoreRef for the mounted secrets.
                                  properties:
                                    keyItems:
                                      description: keyItems are key and path names.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    name:
                                      description: name defines the name of the CredentialStoreRef
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                            required:
                            - credentialStoreRefs
                            type: object
                          providerType:
                            description: providerType specifies where the mounted
                              secrets come from.
                            enum:
                            - deployment
                            - blueprint
                            type: string
                        required:
                        - blueprint
                        - providerType
                        type: object
                    required:
                    - classRef
                    type: object
                  ksqlDBCluster:
                    description: ksqlDBCluster specifies how the ksqlDB cluster should
                      be configured
                    properties:
                      classRef:
                        description: classRef is the reference to the class for the
                          cluster component.
                        properties:
                          name:
                            description: name is the name of the object
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          namespace:
                            description: Namespace is the namespace of the object.
                              Defaults to the current namespace of the object making
                              the reference to.
                            maxLength: 255
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                        required:
                        - name
                        type: object
                      externalAccess:
                        description: externalAccess configures the clusters external
                          access
                        properties:
                          dnsConfig:
                            description: dnsConfig specifies the DNS config for the
                              cluster.
                            properties:
                              subdomain:
                                description: subdomain specifies the subdomain for
                                  the cluster FQDN.
                                minLength: 1
                                type: string
                            type: object
                          enabled:
                            description: enabled enables external access.
                            type: boolean
                          externalTrafficPolicy:
                            description: externalTrafficPolicy specifies the external
                              traffic policy for the load balancer service if the
                              external access type is loadBalancer. Valid options
                              are `Local` and `Cluster`. This takes precedence over
                              the global one.
                            enum:
                            - Local
                            - Cluster
                            type: string
                        required:
                        - enabled
                        type: object
                      mountedSecrets:
                        description: mountedSecrets specifies the secrets injected
                          to the cluster component.
                        properties:
                          blueprint:
                            description: blueprint specifies blueprint provides the
                              secrets.
                            properties:
                              credentialStoreRefs:
                                description: credentialStoreRefs specifies the list
                                  of credentialStoreRef.
                                items:
                                  description: MountedSecretCredentialStoreRef defines
                                    the credentialStoreRef for the mounted secrets.
                                  properties:
                                    keyItems:
                                      description: keyItems are key and path names.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    name:
                                      description: name defines the name of the CredentialStoreRef
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                            required:
                            - credentialStoreRefs
                            type: object
                          providerType:
                            description: providerType specifies where the mounted
                              secrets come from.
                            enum:
                            - deployment
                            - blueprint
                            type: string
                        required:
                        - blueprint
                        - providerType
                        type: object
                    required:
                    - classRef
                    type: object
                  schemaRegistryCluster:
                    description: schemaRegistry specifies how the schemaRegistry cluster
                      should be configured
                    properties:
                      classRef:
                        description: classRef is the reference to the class for the
                          cluster component.
                        properties:
                          name:
                            description: name is the name of the object
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          namespace:
                            description: Namespace is the namespace of the object.
                              Defaults to the current namespace of the object making
                              the reference to.
                            maxLength: 255
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                        required:
                        - name
                        type: object
                      externalAccess:
                        description: externalAccess configures the clusters external
                          access
                        properties:
                          dnsConfig:
                            description: dnsConfig specifies the DNS config for the
                              cluster.
                            properties:
                              subdomain:
                                description: subdomain specifies the subdomain for
                                  the cluster FQDN.
                                minLength: 1
                                type: string
                            type: object
                          enabled:
                            description: enabled enables external access.
                            type: boolean
                          externalTrafficPolicy:
                            description: externalTrafficPolicy specifies the external
                              traffic policy for the load balancer service if the
                              external access type is loadBalancer. Valid options
                              are `Local` and `Cluster`. This takes precedence over
                              the global one.
                            enum:
                            - Local
                            - Cluster
                            type: string
                        required:
                        - enabled
                        type: object
                      mountedSecrets:
                        description: mountedSecrets specifies the secrets injected
                          to the cluster component.
                        properties:
                          blueprint:
                            description: blueprint specifies blueprint provides the
                              secrets.
                            properties:
                              credentialStoreRefs:
                                description: credentialStoreRefs specifies the list
                                  of credentialStoreRef.
                                items:
                                  description: MountedSecretCredentialStoreRef defines
                                    the credentialStoreRef for the mounted secrets.
                                  properties:
                                    keyItems:
                                      description: keyItems are key and path names.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    name:
                                      description: name defines the name of the CredentialStoreRef
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                            required:
                            - credentialStoreRefs
                            type: object
                          providerType:
                            description: providerType specifies where the mounted
                              secrets come from.
                            enum:
                            - deployment
                            - blueprint
                            type: string
                        required:
                        - blueprint
                        - providerType
                        type: object
                    required:
                    - classRef
                    type: object
                  zookeeperCluster:
                    description: zookeeperCluster specifies how the zookeeper cluster
                      should be configured.
                    properties:
                      classRef:
                        description: classRef is the reference to the class for the
                          cluster component.
                        properties:
                          name:
                            description: name is the name of the object
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          namespace:
                            description: Namespace is the namespace of the object.
                              Defaults to the current namespace of the object making
                              the reference to.
                            maxLength: 255
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                        required:
                        - name
                        type: object
                      mountedSecrets:
                        description: mountedSecrets specifies the secrets injected
                          to the cluster component.
                        properties:
                          blueprint:
                            description: blueprint specifies blueprint provides the
                              secrets.
                            properties:
                              credentialStoreRefs:
                                description: credentialStoreRefs specifies the list
                                  of credentialStoreRef.
                                items:
                                  description: MountedSecretCredentialStoreRef defines
                                    the credentialStoreRef for the mounted secrets.
                                  properties:
                                    keyItems:
                                      description: keyItems are key and path names.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    name:
                                      description: name defines the name of the CredentialStoreRef
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                            required:
                            - credentialStoreRefs
                            type: object
                          providerType:
                            description: providerType specifies where the mounted
                              secrets come from.
                            enum:
                            - deployment
                            - blueprint
                            type: string
                        required:
                        - blueprint
                        - providerType
                        type: object
                    required:
                    - classRef
                    type: object
                type: object
              confluentPlatform:
                description: confluentPlatform defines configs for ConfluentPlatform
                  on an application level.
                properties:
                  authorization:
                    description: authorization specifies CP RBAC configuration.
                    properties:
                      mdsClient:
                        description: mdsClient is the client configuration to connect
                          to MDS. This section must provide credentials for one of
                          the superUser configured.
                        properties:
                          authentication:
                            description: authentication specifies the authentication
                              for mdsClient
                            properties:
                              bearer:
                                description: bearer specifies bearer authentication
                                  configuration.
                                properties:
                                  blueprint:
                                    description: blueprint defines the key at the
                                      blueprint layer and cannot be overridden by
                                      deployments. This key will be used by all the
                                      deployments using this blueprint
                                    properties:
                                      credentialStoreRef:
                                        description: credentialStoreRef specifies
                                          the key in the credentialStoreConfig resource
                                        properties:
                                          key:
                                            description: key defines the name of the
                                              key in CredentialStoreConfigRef refers
                                              to
                                            type: string
                                          name:
                                            description: name defines the name of
                                              the CredentialStoreRef
                                            type: string
                                        required:
                                        - name
                                        type: object
                                    required:
                                    - credentialStoreRef
                                    type: object
                                  providerType:
                                    allOf:
                                    - enum:
                                      - deployment
                                      - blueprint
                                    - enum:
                                      - blueprint
                                    description: providerType defines the provider
                                      for the CredentialStoreConfig resource. Valid
                                      option is `blueprint`
                                    type: string
                                required:
                                - blueprint
                                - providerType
                                type: object
                              type:
                                description: type defines the authentication method.
                                  Valid options are `bearer`.
                                enum:
                                - bearer
                                type: string
                            required:
                            - bearer
                            - type
                            type: object
                        required:
                        - authentication
                        type: object
                      superUsers:
                        description: superUsers specify the superusers to give the
                          admin privilege on the Kafka Cluster. This list takes the
                          format as `User:<user-name>`
                        items:
                          description: SuperUser specify the superuser name in pattern
                            User:.+
                          pattern: ^User:[^\s-].+
                          type: string
                        minItems: 1
                        type: array
                      type:
                        description: type specifies the authorization type. The valid
                          options are `rbac` and `simple`.
                        enum:
                        - rbac
                        type: string
                    required:
                    - mdsClient
                    - superUsers
                    - type
                    type: object
                  fipsEnabled:
                    default: false
                    description: fipsEnabled specifies the configuration of FIPS compliant
                      Bouncy Castle type Java Keystores for the Kafka cluster's TLS
                      settings. TLS Secrets must have the keys keystore.bcfks, truststore.bcfks
                      and jksPassword.txt The only component that supports FIPS today
                      is Kafka.
                    type: boolean
                  http:
                    description: http specifies http server configurations for all
                      Confluent Platform components.
                    properties:
                      authentication:
                        description: authentication specifies the authentication configuration.
                        properties:
                          type:
                            description: type specifies the authentication scheme
                              for the REST API server. Valid options are `bearer`
                              and `mtls`. Only use bearer type for CP RBAC deployment.
                            enum:
                            - mtls
                            - bearer
                            type: string
                        required:
                        - type
                        type: object
                      externalAccess:
                        description: externalAccess specifies the external access
                          configuration for HTTP server.
                        properties:
                          ingress:
                            description: ingress specifies the configuration for ingress.
                            properties:
                              advertisedPort:
                                description: advertisedPort specifies the external
                                  port for the client consumption. The default value
                                  is 443.
                                format: int32
                                type: integer
                              annotations:
                                additionalProperties:
                                  type: string
                                description: 'annotations is a map of string key and
                                  value pairs. It specifies Kubernetes annotations
                                  for this service. More info: http://kubernetes.io/docs/user-guide/annotations.
                                  annotations in KubernetesCluster take precedence
                                  over the ones in Blueprint if exists.'
                                type: object
                                x-kubernetes-map-type: granular
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'labels is a map of string key and value
                                  pairs. It specifies Kubernetes labels for this service.
                                  labels in KubernetesCluster take over precedence
                                  the ones in Blueprint if exists. More info: http://kubernetes.io/docs/user-guide/labels.'
                                type: object
                                x-kubernetes-map-type: granular
                            type: object
                          loadBalancer:
                            description: loadBalancer specifies the configurations
                              for load balancers.
                            properties:
                              advertisedPort:
                                description: advertisedPort specifies the external
                                  port for the client consumption. If not configured,
                                  the same internal/external port is configured for
                                  the component. Information about the port can be
                                  retrieved through the status API.
                                format: int32
                                minimum: 1
                                type: integer
                              annotations:
                                additionalProperties:
                                  type: string
                                description: 'annotations is a map of string key and
                                  value pairs. It specifies Kubernetes annotations
                                  for this service. More info: http://kubernetes.io/docs/user-guide/annotations.
                                  annotations in KubernetesCluster take precedence
                                  over the ones in Blueprint if exists.'
                                type: object
                                x-kubernetes-map-type: granular
                              externalTrafficPolicy:
                                description: externalTrafficPolicy specifies the external
                                  traffic policy for the service. Valid options are
                                  `Local` and `Cluster`.
                                enum:
                                - Local
                                - Cluster
                                type: string
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'labels is a map of string key and value
                                  pairs. It specifies Kubernetes labels for this service.
                                  labels in KubernetesCluster take over precedence
                                  the ones in Blueprint if exists. More info: http://kubernetes.io/docs/user-guide/labels.'
                                type: object
                                x-kubernetes-map-type: granular
                              loadBalancerSourceRanges:
                                description: loadBalancerSourceRanges specify the
                                  source ranges.
                                items:
                                  type: string
                                type: array
                            type: object
                          route:
                            description: route specifies the configuration for OpenShift
                              route.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: 'annotations is a map of string key and
                                  value pairs. It specifies Kubernetes annotations
                                  for this service. More info: http://kubernetes.io/docs/user-guide/annotations.
                                  annotations in KubernetesCluster take precedence
                                  over the ones in Blueprint if exists.'
                                type: object
                                x-kubernetes-map-type: granular
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'labels is a map of string key and value
                                  pairs. It specifies Kubernetes labels for this service.
                                  labels in KubernetesCluster take over precedence
                                  the ones in Blueprint if exists. More info: http://kubernetes.io/docs/user-guide/labels.'
                                type: object
                                x-kubernetes-map-type: granular
                              wildcardPolicy:
                                description: wildcardPolicy allows you to define a
                                  route that covers all hosts within a domain. Valid
                                  options are `Subdomain` and `None`. The default
                                  value is `None`.
                                enum:
                                - Subdomain
                                - None
                                type: string
                            type: object
                          type:
                            description: type specifies the external access type for
                              each cluster. Valid options are `loadBalancer`, `ingress`,
                              `route` and `nodePort`.
                            enum:
                            - loadBalancer
                            - ingress
                            - route
                            type: string
                        required:
                        - type
                        type: object
                      tlsConfig:
                        description: tls specifies how certificates will be provided.
                        properties:
                          blueprint:
                            description: blueprint specifies the blueprint provided
                              tls certificates configuration.
                            properties:
                              certificateStoreConfig:
                                description: certificateStoreConfig specifies certificate
                                  store config reference.
                                properties:
                                  name:
                                    description: name specifies the reference name
                                      to certificateStoreConfig.
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                required:
                                - name
                                type: object
                            type: object
                          providerType:
                            allOf:
                            - enum:
                              - deployment
                              - blueprint
                            - enum:
                              - blueprint
                              - deployment
                            description: providerType specifies the provider type
                              for TLS certificates.
                            type: string
                        required:
                        - providerType
                        type: object
                    type: object
                  kafkaListeners:
                    description: kafkaListeners specifies the listeners configurations
                      for Kafka cluster.
                    properties:
                      customListeners:
                        description: customListeners defines the list of Kafka custom
                          listeners.
                        items:
                          properties:
                            authentication:
                              description: authentication specifies the authentication
                                configuration for the Kafka external and custom listeners.
                              properties:
                                ldap:
                                  description: ldap specifies the credentials for
                                    ldap authentication
                                  properties:
                                    blueprint:
                                      description: blueprint defines the key at the
                                        blueprint layer and cannot be overridden by
                                        deployments. This key will be used by all
                                        the deployments using this blueprint
                                      properties:
                                        credentialStoreRef:
                                          description: credentialStoreRef specifies
                                            the key in the credentialStoreConfig resource.
                                          properties:
                                            key:
                                              description: key defines the name of
                                                the key in CredentialStoreConfigRef
                                                refers to
                                              type: string
                                            name:
                                              description: name defines the name of
                                                the CredentialStoreRef
                                              type: string
                                            type:
                                              default: json
                                              description: type specifies the type
                                                of key in secret
                                              enum:
                                              - json
                                              type: string
                                          required:
                                          - name
                                          type: object
                                      required:
                                      - credentialStoreRef
                                      type: object
                                    deployment:
                                      description: deployment defines the key at the
                                        deployment layer. The Cluster APIs provide
                                        the secret containing this key.
                                      properties:
                                        credentialStoreRef:
                                          description: credentialStoreRef specifies
                                            the key in the credentialStoreConfig resource
                                          properties:
                                            key:
                                              description: key defines the name of
                                                the key in thee CredentialStoreConfigRef
                                                refers to
                                              type: string
                                            type:
                                              default: json
                                              description: type specifies the type
                                                of key in secret
                                              enum:
                                              - json
                                              type: string
                                          required:
                                          - key
                                          type: object
                                      required:
                                      - credentialStoreRef
                                      type: object
                                    providerType:
                                      allOf:
                                      - enum:
                                        - deployment
                                        - blueprint
                                      - enum:
                                        - blueprint
                                        - deployment
                                      description: providerType defines the provider
                                        for the Credential. Valid options are `blueprint`
                                        and `deployment`
                                      type: string
                                  required:
                                  - providerType
                                  type: object
                                plain:
                                  description: plain specifies the credentials for
                                    plain authentication
                                  properties:
                                    blueprint:
                                      description: blueprint defines the key at the
                                        blueprint layer and cannot be overridden by
                                        deployments. This key will be used by all
                                        the deployments using this blueprint
                                      properties:
                                        credentialStoreRef:
                                          description: credentialStoreRef specifies
                                            the key in the credentialStoreConfig resource.
                                          properties:
                                            key:
                                              description: key defines the name of
                                                the key in CredentialStoreConfigRef
                                                refers to
                                              type: string
                                            name:
                                              description: name defines the name of
                                                the CredentialStoreRef
                                              type: string
                                            type:
                                              default: json
                                              description: type specifies the type
                                                of key in secret
                                              enum:
                                              - json
                                              type: string
                                          required:
                                          - name
                                          type: object
                                      required:
                                      - credentialStoreRef
                                      type: object
                                    deployment:
                                      description: deployment defines the key at the
                                        deployment layer. The Cluster APIs provide
                                        the secret containing this key.
                                      properties:
                                        credentialStoreRef:
                                          description: credentialStoreRef specifies
                                            the key in the credentialStoreConfig resource
                                          properties:
                                            key:
                                              description: key defines the name of
                                                the key in thee CredentialStoreConfigRef
                                                refers to
                                              type: string
                                            type:
                                              default: json
                                              description: type specifies the type
                                                of key in secret
                                              enum:
                                              - json
                                              type: string
                                          required:
                                          - key
                                          type: object
                                      required:
                                      - credentialStoreRef
                                      type: object
                                    providerType:
                                      allOf:
                                      - enum:
                                        - deployment
                                        - blueprint
                                      - enum:
                                        - blueprint
                                        - deployment
                                      description: providerType defines the provider
                                        for the Credential. Valid options are `blueprint`
                                        and `deployment`
                                      type: string
                                  required:
                                  - providerType
                                  type: object
                                principalMappingRules:
                                  description: principalMappingRules defines the expression
                                    to extract principal from a certificate. This
                                    only works with mTLS authentication.
                                  items:
                                    type: string
                                  type: array
                                type:
                                  description: type specifies the Kafka listener authentication
                                    type. Valid options are `plain`, `mtls`, and `ldap`.
                                  enum:
                                  - plain
                                  - mtls
                                  - ldap
                                  type: string
                              required:
                              - type
                              type: object
                            externalAccess:
                              description: externalAccess defines the external access
                                configuration for the Kafka external listener.
                              properties:
                                dnsConfig:
                                  description: dnsConfig specifies the prefix for
                                    FQDN if subdomain provider type is blueprint.
                                  properties:
                                    subdomain:
                                      description: subdomain specifies the subdomain
                                        for the cluster FQDN.
                                      minLength: 1
                                      type: string
                                  type: object
                                enabled:
                                  description: enabled specifies the external access
                                    type for each cluster.
                                  type: boolean
                                ingress:
                                  description: ingress specifies the configuration
                                    for ingress.
                                  properties:
                                    advertisedPort:
                                      description: advertisedPort specifies the external
                                        port for the client consumption. The default
                                        value is 443.
                                      format: int32
                                      type: integer
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: 'annotations is a map of string
                                        key and value pairs. It specifies Kubernetes
                                        annotations for this service. More info: http://kubernetes.io/docs/user-guide/annotations.
                                        annotations in KubernetesCluster take precedence
                                        over the ones in Blueprint if exists.'
                                      type: object
                                      x-kubernetes-map-type: granular
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: 'labels is a map of string key
                                        and value pairs. It specifies Kubernetes labels
                                        for this service. labels in KubernetesCluster
                                        take over precedence the ones in Blueprint
                                        if exists. More info: http://kubernetes.io/docs/user-guide/labels.'
                                      type: object
                                      x-kubernetes-map-type: granular
                                  type: object
                                loadBalancer:
                                  description: loadBalancer specifies the configuration
                                    for load balancers.
                                  properties:
                                    advertisedPort:
                                      description: advertisedPort specifies the external
                                        port for the client consumption. If not configured,
                                        the same internal/external port is configured
                                        for the component. Information about the port
                                        can be retrieved through the status API.
                                      format: int32
                                      minimum: 1
                                      type: integer
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: 'annotations is a map of string
                                        key and value pairs. It specifies Kubernetes
                                        annotations for this service. More info: http://kubernetes.io/docs/user-guide/annotations.
                                        annotations in KubernetesCluster take precedence
                                        over the ones in Blueprint if exists.'
                                      type: object
                                      x-kubernetes-map-type: granular
                                    externalTrafficPolicy:
                                      description: externalTrafficPolicy specifies
                                        the external traffic policy for the service.
                                        Valid options are `Local` and `Cluster`.
                                      enum:
                                      - Local
                                      - Cluster
                                      type: string
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: 'labels is a map of string key
                                        and value pairs. It specifies Kubernetes labels
                                        for this service. labels in KubernetesCluster
                                        take over precedence the ones in Blueprint
                                        if exists. More info: http://kubernetes.io/docs/user-guide/labels.'
                                      type: object
                                      x-kubernetes-map-type: granular
                                    loadBalancerSourceRanges:
                                      description: loadBalancerSourceRanges specify
                                        the source ranges.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                route:
                                  description: route specifies the configuration for
                                    OpenShift route.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: 'annotations is a map of string
                                        key and value pairs. It specifies Kubernetes
                                        annotations for this service. More info: http://kubernetes.io/docs/user-guide/annotations.
                                        annotations in KubernetesCluster take precedence
                                        over the ones in Blueprint if exists.'
                                      type: object
                                      x-kubernetes-map-type: granular
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: 'labels is a map of string key
                                        and value pairs. It specifies Kubernetes labels
                                        for this service. labels in KubernetesCluster
                                        take over precedence the ones in Blueprint
                                        if exists. More info: http://kubernetes.io/docs/user-guide/labels.'
                                      type: object
                                      x-kubernetes-map-type: granular
                                    wildcardPolicy:
                                      description: wildcardPolicy allows you to define
                                        a route that covers all hosts within a domain.
                                        Valid options are `Subdomain` and `None`.
                                        The default value is `None`.
                                      enum:
                                      - Subdomain
                                      - None
                                      type: string
                                  type: object
                              type: object
                            name:
                              description: name specifies the name of the custom listener.
                                `internal`, `external`, and `token` are reserved and
                                can't be used for this property.
                              maxLength: 30
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                            port:
                              description: port binds the given port to the custom
                                listener. Port numbers lower than `9093` are reserved.
                              format: int32
                              minimum: 9093
                              type: integer
                            tlsConfig:
                              description: tlsConfig specifies the tls configuration
                                for the listener.
                              properties:
                                blueprint:
                                  description: blueprint specifies the blueprint provided
                                    tls certificates configuration.
                                  properties:
                                    certificateStoreConfig:
                                      description: certificateStoreConfig specifies
                                        certificate store config reference.
                                      properties:
                                        name:
                                          description: name specifies the reference
                                            name to certificateStoreConfig.
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                      required:
                                      - name
                                      type: object
                                  type: object
                                providerType:
                                  allOf:
                                  - enum:
                                    - deployment
                                    - blueprint
                                  - enum:
                                    - blueprint
                                    - deployment
                                  description: providerType specifies the provider
                                    type for TLS certificates.
                                  type: string
                              required:
                              - providerType
                              type: object
                          required:
                          - name
                          - port
                          type: object
                        type: array
                      externalListener:
                        description: externalListener specifies the Kafka external
                          listener.
                        properties:
                          authentication:
                            description: authentication specifies the authentication
                              configuration for the Kafka external and custom listeners.
                            properties:
                              ldap:
                                description: ldap specifies the credentials for ldap
                                  authentication
                                properties:
                                  blueprint:
                                    description: blueprint defines the key at the
                                      blueprint layer and cannot be overridden by
                                      deployments. This key will be used by all the
                                      deployments using this blueprint
                                    properties:
                                      credentialStoreRef:
                                        description: credentialStoreRef specifies
                                          the key in the credentialStoreConfig resource.
                                        properties:
                                          key:
                                            description: key defines the name of the
                                              key in CredentialStoreConfigRef refers
                                              to
                                            type: string
                                          name:
                                            description: name defines the name of
                                              the CredentialStoreRef
                                            type: string
                                          type:
                                            default: json
                                            description: type specifies the type of
                                              key in secret
                                            enum:
                                            - json
                                            type: string
                                        required:
                                        - name
                                        type: object
                                    required:
                                    - credentialStoreRef
                                    type: object
                                  deployment:
                                    description: deployment defines the key at the
                                      deployment layer. The Cluster APIs provide the
                                      secret containing this key.
                                    properties:
                                      credentialStoreRef:
                                        description: credentialStoreRef specifies
                                          the key in the credentialStoreConfig resource
                                        properties:
                                          key:
                                            description: key defines the name of the
                                              key in thee CredentialStoreConfigRef
                                              refers to
                                            type: string
                                          type:
                                            default: json
                                            description: type specifies the type of
                                              key in secret
                                            enum:
                                            - json
                                            type: string
                                        required:
                                        - key
                                        type: object
                                    required:
                                    - credentialStoreRef
                                    type: object
                                  providerType:
                                    allOf:
                                    - enum:
                                      - deployment
                                      - blueprint
                                    - enum:
                                      - blueprint
                                      - deployment
                                    description: providerType defines the provider
                                      for the Credential. Valid options are `blueprint`
                                      and `deployment`
                                    type: string
                                required:
                                - providerType
                                type: object
                              plain:
                                description: plain specifies the credentials for plain
                                  authentication
                                properties:
                                  blueprint:
                                    description: blueprint defines the key at the
                                      blueprint layer and cannot be overridden by
                                      deployments. This key will be used by all the
                                      deployments using this blueprint
                                    properties:
                                      credentialStoreRef:
                                        description: credentialStoreRef specifies
                                          the key in the credentialStoreConfig resource.
                                        properties:
                                          key:
                                            description: key defines the name of the
                                              key in CredentialStoreConfigRef refers
                                              to
                                            type: string
                                          name:
                                            description: name defines the name of
                                              the CredentialStoreRef
                                            type: string
                                          type:
                                            default: json
                                            description: type specifies the type of
                                              key in secret
                                            enum:
                                            - json
                                            type: string
                                        required:
                                        - name
                                        type: object
                                    required:
                                    - credentialStoreRef
                                    type: object
                                  deployment:
                                    description: deployment defines the key at the
                                      deployment layer. The Cluster APIs provide the
                                      secret containing this key.
                                    properties:
                                      credentialStoreRef:
                                        description: credentialStoreRef specifies
                                          the key in the credentialStoreConfig resource
                                        properties:
                                          key:
                                            description: key defines the name of the
                                              key in thee CredentialStoreConfigRef
                                              refers to
                                            type: string
                                          type:
                                            default: json
                                            description: type specifies the type of
                                              key in secret
                                            enum:
                                            - json
                                            type: string
                                        required:
                                        - key
                                        type: object
                                    required:
                                    - credentialStoreRef
                                    type: object
                                  providerType:
                                    allOf:
                                    - enum:
                                      - deployment
                                      - blueprint
                                    - enum:
                                      - blueprint
                                      - deployment
                                    description: providerType defines the provider
                                      for the Credential. Valid options are `blueprint`
                                      and `deployment`
                                    type: string
                                required:
                                - providerType
                                type: object
                              principalMappingRules:
                                description: principalMappingRules defines the expression
                                  to extract principal from a certificate. This only
                                  works with mTLS authentication.
                                items:
                                  type: string
                                type: array
                              type:
                                description: type specifies the Kafka listener authentication
                                  type. Valid options are `plain`, `mtls`, and `ldap`.
                                enum:
                                - plain
                                - mtls
                                - ldap
                                type: string
                            required:
                            - type
                            type: object
                          externalAccess:
                            description: externalAccess defines the external access
                              configuration for the Kafka external listener.
                            properties:
                              dnsConfig:
                                description: dnsConfig specifies the prefix for FQDN
                                  if subdomain provider type is blueprint.
                                properties:
                                  subdomain:
                                    description: subdomain specifies the subdomain
                                      for the cluster FQDN.
                                    minLength: 1
                                    type: string
                                type: object
                              enabled:
                                description: enabled specifies the external access
                                  type for each cluster.
                                type: boolean
                              ingress:
                                description: ingress specifies the configuration for
                                  ingress.
                                properties:
                                  advertisedPort:
                                    description: advertisedPort specifies the external
                                      port for the client consumption. The default
                                      value is 443.
                                    format: int32
                                    type: integer
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: 'annotations is a map of string key
                                      and value pairs. It specifies Kubernetes annotations
                                      for this service. More info: http://kubernetes.io/docs/user-guide/annotations.
                                      annotations in KubernetesCluster take precedence
                                      over the ones in Blueprint if exists.'
                                    type: object
                                    x-kubernetes-map-type: granular
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: 'labels is a map of string key and
                                      value pairs. It specifies Kubernetes labels
                                      for this service. labels in KubernetesCluster
                                      take over precedence the ones in Blueprint if
                                      exists. More info: http://kubernetes.io/docs/user-guide/labels.'
                                    type: object
                                    x-kubernetes-map-type: granular
                                type: object
                              loadBalancer:
                                description: loadBalancer specifies the configuration
                                  for load balancers.
                                properties:
                                  advertisedPort:
                                    description: advertisedPort specifies the external
                                      port for the client consumption. If not configured,
                                      the same internal/external port is configured
                                      for the component. Information about the port
                                      can be retrieved through the status API.
                                    format: int32
                                    minimum: 1
                                    type: integer
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: 'annotations is a map of string key
                                      and value pairs. It specifies Kubernetes annotations
                                      for this service. More info: http://kubernetes.io/docs/user-guide/annotations.
                                      annotations in KubernetesCluster take precedence
                                      over the ones in Blueprint if exists.'
                                    type: object
                                    x-kubernetes-map-type: granular
                                  externalTrafficPolicy:
                                    description: externalTrafficPolicy specifies the
                                      external traffic policy for the service. Valid
                                      options are `Local` and `Cluster`.
                                    enum:
                                    - Local
                                    - Cluster
                                    type: string
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: 'labels is a map of string key and
                                      value pairs. It specifies Kubernetes labels
                                      for this service. labels in KubernetesCluster
                                      take over precedence the ones in Blueprint if
                                      exists. More info: http://kubernetes.io/docs/user-guide/labels.'
                                    type: object
                                    x-kubernetes-map-type: granular
                                  loadBalancerSourceRanges:
                                    description: loadBalancerSourceRanges specify
                                      the source ranges.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              route:
                                description: route specifies the configuration for
                                  OpenShift route.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: 'annotations is a map of string key
                                      and value pairs. It specifies Kubernetes annotations
                                      for this service. More info: http://kubernetes.io/docs/user-guide/annotations.
                                      annotations in KubernetesCluster take precedence
                                      over the ones in Blueprint if exists.'
                                    type: object
                                    x-kubernetes-map-type: granular
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: 'labels is a map of string key and
                                      value pairs. It specifies Kubernetes labels
                                      for this service. labels in KubernetesCluster
                                      take over precedence the ones in Blueprint if
                                      exists. More info: http://kubernetes.io/docs/user-guide/labels.'
                                    type: object
                                    x-kubernetes-map-type: granular
                                  wildcardPolicy:
                                    description: wildcardPolicy allows you to define
                                      a route that covers all hosts within a domain.
                                      Valid options are `Subdomain` and `None`. The
                                      default value is `None`.
                                    enum:
                                    - Subdomain
                                    - None
                                    type: string
                                type: object
                            type: object
                          tlsConfig:
                            description: tlsConfig specifies the tls configuration
                              for the listener.
                            properties:
                              blueprint:
                                description: blueprint specifies the blueprint provided
                                  tls certificates configuration.
                                properties:
                                  certificateStoreConfig:
                                    description: certificateStoreConfig specifies
                                      certificate store config reference.
                                    properties:
                                      name:
                                        description: name specifies the reference
                                          name to certificateStoreConfig.
                                        maxLength: 63
                                        minLength: 1
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                        type: string
                                    required:
                                    - name
                                    type: object
                                type: object
                              providerType:
                                allOf:
                                - enum:
                                  - deployment
                                  - blueprint
                                - enum:
                                  - blueprint
                                  - deployment
                                description: providerType specifies the provider type
                                  for TLS certificates.
                                type: string
                            required:
                            - providerType
                            type: object
                        type: object
                      global:
                        description: global defines the global configurations for
                          Kafka Listeners.
                        properties:
                          externalAccessType:
                            description: externalAccessType specifies the global external
                              access type for Kafka Listeners. It is required if any
                              of the Kafka listener has externalAccess enabled. Valid
                              options are `loadBalancer`, `ingress`, and  `route`
                            enum:
                            - loadBalancer
                            - ingress
                            - route
                            type: string
                          ingress:
                            description: ingress specifies the global configuration
                              for ingress.
                            properties:
                              advertisedPort:
                                description: advertisedPort specifies the external
                                  port for the client consumption. The default value
                                  is 443.
                                format: int32
                                type: integer
                              annotations:
                                additionalProperties:
                                  type: string
                                description: 'annotations is a map of string key and
                                  value pairs. It specifies Kubernetes annotations
                                  for this service. More info: http://kubernetes.io/docs/user-guide/annotations.
                                  annotations in KubernetesCluster take precedence
                                  over the ones in Blueprint if exists.'
                                type: object
                                x-kubernetes-map-type: granular
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'labels is a map of string key and value
                                  pairs. It specifies Kubernetes labels for this service.
                                  labels in KubernetesCluster take over precedence
                                  the ones in Blueprint if exists. More info: http://kubernetes.io/docs/user-guide/labels.'
                                type: object
                                x-kubernetes-map-type: granular
                            type: object
                          loadBalancer:
                            description: loadBalancer specifies the global configuration
                              for load balancers.
                            properties:
                              advertisedPort:
                                description: advertisedPort specifies the external
                                  port for the client consumption. If not configured,
                                  the same internal/external port is configured for
                                  the component. Information about the port can be
                                  retrieved through the status API.
                                format: int32
                                minimum: 1
                                type: integer
                              annotations:
                                additionalProperties:
                                  type: string
                                description: 'annotations is a map of string key and
                                  value pairs. It specifies Kubernetes annotations
                                  for this service. More info: http://kubernetes.io/docs/user-guide/annotations.
                                  annotations in KubernetesCluster take precedence
                                  over the ones in Blueprint if exists.'
                                type: object
                                x-kubernetes-map-type: granular
                              externalTrafficPolicy:
                                description: externalTrafficPolicy specifies the external
                                  traffic policy for the service. Valid options are
                                  `Local` and `Cluster`.
                                enum:
                                - Local
                                - Cluster
                                type: string
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'labels is a map of string key and value
                                  pairs. It specifies Kubernetes labels for this service.
                                  labels in KubernetesCluster take over precedence
                                  the ones in Blueprint if exists. More info: http://kubernetes.io/docs/user-guide/labels.'
                                type: object
                                x-kubernetes-map-type: granular
                              loadBalancerSourceRanges:
                                description: loadBalancerSourceRanges specify the
                                  source ranges.
                                items:
                                  type: string
                                type: array
                            type: object
                          route:
                            description: route specifies the global configuration
                              for OpenShift route.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: 'annotations is a map of string key and
                                  value pairs. It specifies Kubernetes annotations
                                  for this service. More info: http://kubernetes.io/docs/user-guide/annotations.
                                  annotations in KubernetesCluster take precedence
                                  over the ones in Blueprint if exists.'
                                type: object
                                x-kubernetes-map-type: granular
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'labels is a map of string key and value
                                  pairs. It specifies Kubernetes labels for this service.
                                  labels in KubernetesCluster take over precedence
                                  the ones in Blueprint if exists. More info: http://kubernetes.io/docs/user-guide/labels.'
                                type: object
                                x-kubernetes-map-type: granular
                              wildcardPolicy:
                                description: wildcardPolicy allows you to define a
                                  route that covers all hosts within a domain. Valid
                                  options are `Subdomain` and `None`. The default
                                  value is `None`.
                                enum:
                                - Subdomain
                                - None
                                type: string
                            type: object
                        type: object
                      internalListener:
                        description: internalListener specifies the Kafka internal
                          listener.
                        properties:
                          authentication:
                            description: authentication specifies the authentication
                              configuration for the Kafka listeners.
                            properties:
                              ldap:
                                description: ldap specifies the credentials for ldap
                                  authentication
                                properties:
                                  blueprint:
                                    description: blueprint defines the key at the
                                      blueprint layer and cannot be overridden by
                                      deployments. This key will be used by all the
                                      deployments using this blueprint
                                    properties:
                                      credentialStoreRef:
                                        description: credentialStoreRef specifies
                                          the key in the credentialStoreConfig resource.
                                        properties:
                                          key:
                                            description: key defines the name of the
                                              key in CredentialStoreConfigRef refers
                                              to
                                            type: string
                                          name:
                                            description: name defines the name of
                                              the CredentialStoreRef
                                            type: string
                                          type:
                                            default: json
                                            description: type specifies the type of
                                              key in secret
                                            enum:
                                            - json
                                            type: string
                                        required:
                                        - name
                                        type: object
                                    required:
                                    - credentialStoreRef
                                    type: object
                                  providerType:
                                    allOf:
                                    - enum:
                                      - deployment
                                      - blueprint
                                    - enum:
                                      - blueprint
                                    description: providerType defines the provider
                                      for the Credential. Valid options are `blueprint`
                                    type: string
                                required:
                                - providerType
                                type: object
                              plain:
                                description: plain specifies the credentials for plain
                                  authentication
                                properties:
                                  blueprint:
                                    description: blueprint defines the key at the
                                      blueprint layer and cannot be overridden by
                                      deployments. This key will be used by all the
                                      deployments using this blueprint
                                    properties:
                                      credentialStoreRef:
                                        description: credentialStoreRef specifies
                                          the key in the credentialStoreConfig resource.
                                        properties:
                                          key:
                                            description: key defines the name of the
                                              key in CredentialStoreConfigRef refers
                                              to
                                            type: string
                                          name:
                                            description: name defines the name of
                                              the CredentialStoreRef
                                            type: string
                                          type:
                                            default: json
                                            description: type specifies the type of
                                              key in secret
                                            enum:
                                            - json
                                            type: string
                                        required:
                                        - name
                                        type: object
                                    required:
                                    - credentialStoreRef
                                    type: object
                                  providerType:
                                    allOf:
                                    - enum:
                                      - deployment
                                      - blueprint
                                    - enum:
                                      - blueprint
                                    description: providerType defines the provider
                                      for the Credential. Valid options are `blueprint`
                                    type: string
                                required:
                                - providerType
                                type: object
                              principalMappingRules:
                                description: principalMappingRules defines the expression
                                  to extract principal from a certificate. This only
                                  works with mTLS authentication.
                                items:
                                  type: string
                                type: array
                              type:
                                description: type specifies the Kafka listener authentication
                                  type. Valid options are `plain`, `mtls`, and `ldap`.
                                enum:
                                - plain
                                - mtls
                                - ldap
                                type: string
                            required:
                            - type
                            type: object
                          tlsConfig:
                            description: tlsConfig specifies the tls configuration
                              for the listener.
                            properties:
                              blueprint:
                                description: blueprint specifies the blueprint provided
                                  tls certificates configuration.
                                properties:
                                  certificateStoreConfig:
                                    description: certificateStoreConfig specifies
                                      certificate store config reference.
                                    properties:
                                      name:
                                        description: name specifies the reference
                                          name to certificateStoreConfig.
                                        maxLength: 63
                                        minLength: 1
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                        type: string
                                    required:
                                    - name
                                    type: object
                                type: object
                              providerType:
                                allOf:
                                - enum:
                                  - deployment
                                  - blueprint
                                - enum:
                                  - blueprint
                                  - deployment
                                description: providerType specifies the provider type
                                  for TLS certificates.
                                type: string
                            required:
                            - providerType
                            type: object
                        type: object
                    type: object
                  license:
                    description: license specifies the license configuration for the
                      Confluent Platform.
                    properties:
                      blueprint:
                        description: blueprint defines the key at the blueprint layer
                          and cannot be overridden by deployments. This key will be
                          used by all the deployments using this blueprint
                        properties:
                          credentialStoreRef:
                            description: credentialStoreRef specifies the key in the
                              credentialStoreConfig resource
                            properties:
                              key:
                                description: key defines the name of the key in CredentialStoreConfigRef
                                  refers to
                                type: string
                              name:
                                description: name defines the name of the CredentialStoreRef
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - credentialStoreRef
                        type: object
                      providerType:
                        allOf:
                        - enum:
                          - deployment
                          - blueprint
                        - enum:
                          - blueprint
                        description: providerType defines the provider for the CredentialStoreConfig
                          resource. Valid option is `blueprint`
                        type: string
                    required:
                    - blueprint
                    - providerType
                    type: object
                  metrics:
                    description: metrics specify the CP security settings configuration
                      for metrics - jmx, jolokia, and prometheus/jmx
                    properties:
                      authentication:
                        description: authentication specifies the authentication configuration
                          for the metric endpoint.
                        properties:
                          type:
                            description: type specifies the metrics authentication
                              method. The valid option is `mtls`.
                            enum:
                            - mtls
                            type: string
                        required:
                        - type
                        type: object
                      tlsConfig:
                        description: tlsConfig specifies the TLSConfig configuration
                          for the metric endpoint for CP component.
                        properties:
                          blueprint:
                            description: blueprint specifies the blueprint provided
                              tls certificates configuration.
                            properties:
                              certificateStoreConfig:
                                description: certificateStoreConfig specifies certificate
                                  store config reference.
                                properties:
                                  name:
                                    description: name specifies the reference name
                                      to certificateStoreConfig.
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                required:
                                - name
                                type: object
                            type: object
                          providerType:
                            allOf:
                            - enum:
                              - deployment
                              - blueprint
                            - enum:
                              - blueprint
                            description: providerType specifies the provider type
                              for TLS certificates.
                            type: string
                        required:
                        - providerType
                        type: object
                    type: object
                  version:
                    description: version is the versions of confluent platform.
                    type: string
                  zookeeper:
                    description: zookeeper specifies the Zookeeper configuration.
                    properties:
                      authentication:
                        description: authentication specifies the authentication configuration
                          for Zookeeper
                        properties:
                          digest:
                            description: digest specifies the digest authentication
                              configuration for zookeeper
                            properties:
                              blueprint:
                                description: blueprint defines the key at the blueprint
                                  layer and cannot be overridden by deployments. This
                                  key will be used by all the deployments using this
                                  blueprint
                                properties:
                                  credentialStoreRef:
                                    description: credentialStoreRef specifies the
                                      key in the credentialStoreConfig resource
                                    properties:
                                      key:
                                        description: key defines the name of the key
                                          in CredentialStoreConfigRef refers to
                                        type: string
                                      name:
                                        description: name defines the name of the
                                          CredentialStoreRef
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - credentialStoreRef
                                type: object
                              providerType:
                                allOf:
                                - enum:
                                  - deployment
                                  - blueprint
                                - enum:
                                  - blueprint
                                description: providerType defines the provider for
                                  the CredentialStoreConfig resource. Valid option
                                  is `blueprint`
                                type: string
                            required:
                            - blueprint
                            - providerType
                            type: object
                          type:
                            description: type defines the authentication method for
                              Zookeeper. Valid options are `digest` and `mtls`
                            enum:
                            - digest
                            - mtls
                            type: string
                        required:
                        - type
                        type: object
                      tlsConfig:
                        description: tlsConfig specifies the tls configuration for
                          Zookeeper
                        properties:
                          blueprint:
                            description: blueprint specifies the blueprint provided
                              tls certificates configuration.
                            properties:
                              certificateStoreConfig:
                                description: certificateStoreConfig specifies certificate
                                  store config reference.
                                properties:
                                  name:
                                    description: name specifies the reference name
                                      to certificateStoreConfig.
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                required:
                                - name
                                type: object
                            type: object
                          providerType:
                            allOf:
                            - enum:
                              - deployment
                              - blueprint
                            - enum:
                              - blueprint
                            description: providerType specifies the provider type
                              for TLS certificates.
                            type: string
                        required:
                        - providerType
                        type: object
                    type: object
                required:
                - version
                type: object
              confluentTelemetry:
                description: confluentMonitoring defines CP monitoring mechanisms.
                properties:
                  authentication:
                    description: authentication defines the credentials for communication
                      to confluent cloud
                    properties:
                      basic:
                        description: Basic specifies basic authentication configuration.
                        properties:
                          blueprint:
                            description: blueprint defines the key at the blueprint
                              layer and cannot be overridden by deployments. This
                              key will be used by all the deployments using this blueprint
                            properties:
                              credentialStoreRef:
                                description: credentialStoreRef specifies the key
                                  in the credentialStoreConfig resource
                                properties:
                                  key:
                                    description: key defines the name of the key in
                                      CredentialStoreConfigRef refers to
                                    type: string
                                  name:
                                    description: name defines the name of the CredentialStoreRef
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - credentialStoreRef
                            type: object
                          providerType:
                            allOf:
                            - enum:
                              - deployment
                              - blueprint
                            - enum:
                              - blueprint
                            description: providerType defines the provider for the
                              CredentialStoreConfig resource. Valid option is `blueprint`
                            type: string
                        required:
                        - blueprint
                        - providerType
                        type: object
                      type:
                        description: type defines the authentication method. Valid
                          options are `basic`.
                        enum:
                        - basic
                        type: string
                    required:
                    - basic
                    - type
                    type: object
                  proxy:
                    description: proxy defines the proxy server to send metrics to
                    properties:
                      credentialRequired:
                        description: credentialRequired if true, secures the proxy
                          communication
                        type: boolean
                      enabled:
                        description: enabled if true, enables confluent telemetry
                          communication via proxy
                        type: boolean
                    required:
                    - enabled
                    type: object
                required:
                - authentication
                type: object
              credentialStoreConfigRefs:
                description: credentialStore defines the storing mechanism for all
                  credential.
                items:
                  description: ObjectRef specifies a reference another Confluent Platform
                    CR
                  properties:
                    name:
                      description: name is the name of the object
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    namespace:
                      description: Namespace is the namespace of the object. Defaults
                        to the current namespace of the object making the reference
                        to.
                      maxLength: 255
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                  required:
                  - name
                  type: object
                type: array
              dnsConfig:
                description: dnsConfig defines the global DNS configurations to generate
                  FQDN.
                properties:
                  blueprint:
                    description: blueprint specifies the configuration for blueprint
                      subdomain provider type.
                    properties:
                      generateFQDNWithSchema:
                        description: generateFQDNWithSchema defines the schema to
                          generate FQDN.
                        properties:
                          addClusterName:
                            description: addClusterName specifies whether to add cluster
                              name to the FQDN.
                            type: boolean
                          addRegionName:
                            description: addRegionName specifies whether to add region
                              name to the FQDN.
                            type: boolean
                        type: object
                    type: object
                  deployment:
                    description: deployment specifies the configuration for deployment
                      subdomain provider type.
                    properties:
                      subdomainRegex:
                        description: subdomainRegex specifies the regex for subdomains.
                        type: string
                    type: object
                  domain:
                    description: domain specifies the domain name.
                    type: string
                  providerType:
                    description: providerType specifies where the subdomain come from.
                    enum:
                    - deployment
                    - blueprint
                    type: string
                required:
                - domain
                - providerType
                type: object
              dockerImages:
                description: dockerImages defines the registries and credentials used
                  for CP.
                items:
                  description: DockerImage specifies how images will be supplied for
                    clusters
                  properties:
                    pullSecretRef:
                      description: blueprintCredentialStoreConfig specifies the registry
                        CredentialStoreConfig
                      properties:
                        blueprint:
                          description: blueprint defines the key at the blueprint
                            layer and cannot be overridden by Deployment API. This
                            key will be used by all the deployments using this blueprint
                          properties:
                            credentialStoreRef:
                              description: credentialStoreRef specifies the key in
                                the credential store
                              properties:
                                name:
                                  description: name defines the name of the credentialStoreRef
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - credentialStoreRef
                          type: object
                        providerType:
                          allOf:
                          - enum:
                            - deployment
                            - blueprint
                          - enum:
                            - blueprint
                          description: providerType defines the provider for the CredentialStoreConfig
                            resource. Valid option is only `blueprint`
                          type: string
                      required:
                      - blueprint
                      - providerType
                      type: object
                    registry:
                      description: registry is where the docker images are hosted.
                      pattern: .+
                      type: string
                  required:
                  - registry
                  type: object
                type: array
              identityProvider:
                description: identityProvider defines the identity mechanism.
                properties:
                  ldap:
                    description: ldap defines the LDAP service configuration.
                    properties:
                      address:
                        description: address defines the LDAP server address.
                        minLength: 1
                        type: string
                      authentication:
                        description: authentication defines the how to connect to
                          LDAP service.
                        properties:
                          simple:
                            description: simple specifies simple authentication configuration.
                            properties:
                              blueprint:
                                description: blueprint defines the key at the blueprint
                                  layer and cannot be overridden by deployments. This
                                  key will be used by all the deployments using this
                                  blueprint
                                properties:
                                  credentialStoreRef:
                                    description: credentialStoreRef specifies the
                                      key in the credentialStoreConfig resource
                                    properties:
                                      key:
                                        description: key defines the name of the key
                                          in CredentialStoreConfigRef refers to
                                        type: string
                                      name:
                                        description: name defines the name of the
                                          CredentialStoreRef
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - credentialStoreRef
                                type: object
                              providerType:
                                allOf:
                                - enum:
                                  - deployment
                                  - blueprint
                                - enum:
                                  - blueprint
                                description: providerType defines the provider for
                                  the CredentialStoreConfig resource. Valid option
                                  is `blueprint`
                                type: string
                            required:
                            - blueprint
                            - providerType
                            type: object
                          type:
                            description: type defines the authentication method. Valid
                              options are `simple`.
                            enum:
                            - simple
                            type: string
                        required:
                        - simple
                        - type
                        type: object
                      configurations:
                        description: configurations defines the LDAP configurations
                          for Confluent RBAC.
                        properties:
                          groupMemberAttribute:
                            description: groupMemberAttribute specifies the LDAP group
                              member attribute.
                            minLength: 1
                            type: string
                          groupMemberAttributePattern:
                            description: groupMemberAttributePattern specifies the
                              regular expression pattern for the LDAP group member
                              attribute.
                            minLength: 1
                            type: string
                          groupNameAttribute:
                            description: groupNameAttribute specifies the LDAP group
                              name attribute.
                            minLength: 1
                            type: string
                          groupObjectClass:
                            description: groupObjectClass specifies the LDAP group
                              object class.
                            minLength: 1
                            type: string
                          groupSearchBase:
                            description: groupSearchBase specifies the LDAP search
                              base for the group-based search.
                            minLength: 1
                            type: string
                          groupSearchFilter:
                            description: groupSearchFilter specifies the LDAP search
                              filter for the group-based search.
                            minLength: 1
                            type: string
                          groupSearchScope:
                            description: groupSearchScope specifies the LDAP search
                              scope for the group-based search.
                            format: int32
                            type: integer
                          userMemberOfAttributePattern:
                            description: userMemberOfAttributePattern specifies the
                              regular expression pattern for the LDAP user member
                              attribute.
                            minLength: 1
                            type: string
                          userNameAttribute:
                            description: userNameAttribute specifies the LDAP username
                              attribute.
                            minLength: 1
                            type: string
                          userObjectClass:
                            description: userObjectClass specifies the LDAP user object
                              class.
                            minLength: 1
                            type: string
                          userSearchBase:
                            description: userSearchBase specifies the LDAP search
                              base for the user-based search.
                            minLength: 1
                            type: string
                          userSearchFilter:
                            description: userSearchFilter specifies the LDAP search
                              filter for the user-based search.
                            minLength: 1
                            type: string
                          userSearchScope:
                            description: userSearchScope specifies the LDAP search
                              scope for the user-based search.
                            format: int32
                            type: integer
                        type: object
                      tlsClientConfig:
                        description: tlsClientConfig specifies the client-side TLS
                          configuration to connect to LDAP.
                        properties:
                          blueprint:
                            description: blueprint specifies the blueprint provided
                              tls certificates configuration.
                            properties:
                              certificateStoreConfig:
                                description: certificateStoreConfig specifies certificate
                                  store config reference.
                                properties:
                                  name:
                                    description: name specifies the reference name
                                      to certificateStoreConfig.
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                required:
                                - name
                                type: object
                            type: object
                          providerType:
                            allOf:
                            - enum:
                              - deployment
                              - blueprint
                            - enum:
                              - blueprint
                            description: providerType specifies the provider type
                              for TLS certificates.
                            type: string
                        required:
                        - providerType
                        type: object
                    required:
                    - address
                    - configurations
                    type: object
                  type:
                    description: type defines the identity provider type. The valid
                      option is `ldap`.
                    enum:
                    - ldap
                    type: string
                required:
                - ldap
                - type
                type: object
              internalCAKeyPair:
                description: internalCAKeyPair specifies the internal CA key pair
                  configuration for internal communication. This is required field
                  if CP platform requires encryption. All the internal TLS communication
                  is configured via this field.
                properties:
                  blueprint:
                    description: blueprint specifies the blueprint provides the CA
                      key pair.
                    properties:
                      auto:
                        description: auto specifies the configuration for auto generated
                          CA key pair.
                        properties:
                          caConfig:
                            description: caConfig specifies the configuration for
                              CA key pair.
                            properties:
                              certDurationInDays:
                                description: certDurationInDays specifies the certificate
                                  valid duration in days.
                                type: integer
                              renewBeforeInDays:
                                description: renewBeforeInDays specifies when to renew
                                  the certificate before it expires.
                                type: integer
                              sans:
                                description: sans specifies the additional Subject
                                  Alternative Name (SAN) to be added on the certificate.
                                items:
                                  description: SAN Subject Alternative Name
                                  minLength: 1
                                  pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}$
                                  type: string
                                type: array
                            type: object
                          certificateConfig:
                            description: certificateConfig specifies the generated
                              certificate configuration using the auto generated CA
                              key pair.
                            properties:
                              certDurationInDays:
                                description: certDurationInDays specifies the certificate
                                  valid duration in days.
                                type: integer
                              renewBeforeInDays:
                                description: renewBeforeInDays specifies when to renew
                                  the certificate before it expires.
                                type: integer
                              sans:
                                description: sans specifies the additional Subject
                                  Alternative Name (SAN) to be added on the certificate.
                                items:
                                  description: SAN Subject Alternative Name
                                  minLength: 1
                                  pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}$
                                  type: string
                                type: array
                            type: object
                        type: object
                      custom:
                        description: custom specifies the configuration for user provided
                          CA key pair.
                        properties:
                          certificateConfig:
                            description: certificateConfig specifies the generated
                              certificate configuration using the CA key pair.
                            properties:
                              certDurationInDays:
                                description: certDurationInDays specifies the certificate
                                  valid duration in days.
                                type: integer
                              renewBeforeInDays:
                                description: renewBeforeInDays specifies when to renew
                                  the certificate before it expires.
                                type: integer
                              sans:
                                description: sans specifies the additional Subject
                                  Alternative Name (SAN) to be added on the certificate.
                                items:
                                  description: SAN Subject Alternative Name
                                  minLength: 1
                                  pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}$
                                  type: string
                                type: array
                            type: object
                          certificateStoreConfig:
                            description: certificateStoreConfig specifies the certificate
                              store config for the CA key pair.
                            properties:
                              name:
                                description: name specifies the reference name to
                                  certificateStoreConfig.
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - certificateStoreConfig
                        type: object
                      type:
                        description: type specifies the type of blueprint provided
                          CA key pair.
                        enum:
                        - auto
                        - custom
                        type: string
                    required:
                    - type
                    type: object
                  providerType:
                    allOf:
                    - enum:
                      - deployment
                      - blueprint
                    - enum:
                      - blueprint
                    description: providerType specifies the provider type for the
                      CA key pair. Currently, only supports providerType is `blueprint`.
                    type: string
                required:
                - blueprint
                - providerType
                type: object
              k8s:
                description: k8s defines kubernetes (k8s) configs. This configuration
                  is propagated to all the cluster created from this blueprint.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: 'annotations is a map of string key and value pairs
                      stored with the resource and may be set by external tools to
                      store and retrieve arbitrary metadata. They are not queryable
                      and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations.'
                    type: object
                    x-kubernetes-map-type: granular
                  labels:
                    additionalProperties:
                      type: string
                    description: 'labels is a map of string key and value pairs that
                      can be used to organize and categorize (scope and select) objects.
                      More info: http://kubernetes.io/docs/user-guide/labels.'
                    type: object
                    x-kubernetes-map-type: granular
                  pullPolicy:
                    description: pullPolicy is the policy for pulling images. Valid
                      options are `Always`, `Never`, and `IfNotPresent`. The default
                      value is `IfNotPresent`.
                    enum:
                    - Always
                    - Never
                    - IfNotPresent
                    type: string
                type: object
              kafkaTieredStorage:
                description: kafkaTieredStorage defines tiered storage configuration
                  for the kafka cluster.
                properties:
                  blueprint:
                    description: blueprint specifies the blueprint provided tiered
                      storage configuration.
                    properties:
                      aws:
                        description: aws defines configuration to connect bucket in
                          AWS.
                        properties:
                          bucketName:
                            description: bucketName defines the name of the S3 bucket
                              A Kafka broker interacts with this bucket for writing
                              and reading tiered data.
                            minLength: 1
                            type: string
                          bucketRegion:
                            description: bucketRegion defines the region of S3 bucket
                              The region cannot be empty
                            minLength: 1
                            type: string
                          credentialStoreRef:
                            description: credentialStoreRef configures the credential
                              to connect to the S3 backend API. If this is not configured,
                              it assumes serviceAccount mode of accessing the bucket.
                              To use the serviceAccount, make sure the right serviceAccount
                              has proper IAM roles.
                            properties:
                              key:
                                description: key defines the name of the key in secret
                                  the CredentialStoreConfigRef refers to Make sure
                                  to configure the right keys for a given cloud provider
                                  type. More information about the value of the key
                                  can be found https://docs.confluent.io/platform/current/kafka/tiered-storage.html
                                  Internally it configures the right properties to
                                  load credentials form broker's server.properties.
                                  Make sure to read the cloud providers mechanism
                                  to use the right keys.
                                minLength: 1
                                type: string
                              name:
                                description: name defines the name of the CredentialStoreRef
                                minLength: 1
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          forcePathStyle:
                            description: forcePathStyle configures the client to use
                              path-style access for all requests. Setting this parameter
                              to true enables path style access.
                            type: boolean
                        required:
                        - bucketName
                        - bucketRegion
                        type: object
                      backendType:
                        allOf:
                        - enum:
                          - aws
                          - gcp
                          - other
                        - enum:
                          - aws
                          - gcp
                          - other
                        description: backendType refers to cloud services where kafka
                          will connect to. The supported values are `aws`, `gcp` &
                          `other`. For `other` type can accommodate any cloud provider
                          that supports Amazon S3 APIs. More information can be found
                          here, https://docs.confluent.io/platform/current/kafka/tiered-storage.html
                        type: string
                      gcp:
                        description: gcp defines configuration to connect bucket in
                          gcs.
                        properties:
                          bucketName:
                            description: bucketName defines the name of the S3 bucket
                              A Kafka broker interacts with this bucket for writing
                              and reading tiered data.
                            minLength: 1
                            type: string
                          bucketRegion:
                            description: bucketRegion defines the region of S3 bucket
                              The region cannot be empty
                            minLength: 1
                            type: string
                          credentialStoreRef:
                            description: credentialStoreRef configures the credential
                              to connect to the S3 backend API. If this is not configured,
                              it assumes serviceAccount mode of accessing the bucket.
                              To use the serviceAccount, make sure the right serviceAccount
                              has proper IAM roles.
                            properties:
                              key:
                                description: key defines the name of the key in secret
                                  the CredentialStoreConfigRef refers to Make sure
                                  to configure the right keys for a given cloud provider
                                  type. More information about the value of the key
                                  can be found https://docs.confluent.io/platform/current/kafka/tiered-storage.html
                                  Internally it configures the right properties to
                                  load credentials form broker's server.properties.
                                  Make sure to read the cloud providers mechanism
                                  to use the right keys.
                                minLength: 1
                                type: string
                              name:
                                description: name defines the name of the CredentialStoreRef
                                minLength: 1
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          forcePathStyle:
                            description: forcePathStyle configures the client to use
                              path-style access for all requests. Setting this parameter
                              to true enables path style access.
                            type: boolean
                        required:
                        - bucketName
                        - bucketRegion
                        type: object
                      other:
                        description: other defines configuration to connect bucket
                          in cloud providers other than gcs/aws. The bucket will access
                          through Amazon S3 APIs.
                        properties:
                          bucketName:
                            description: bucketName defines the name of the S3 bucket
                              A Kafka broker interacts with this bucket for writing
                              and reading tiered data.
                            minLength: 1
                            type: string
                          bucketRegion:
                            description: bucketRegion defines the region of S3 bucket
                              The region cannot be empty
                            minLength: 1
                            type: string
                          credentialStoreRef:
                            description: credentialStoreRef configures the credential
                              to connect to the S3 backend API. If this is not configured,
                              it assumes serviceAccount mode of accessing the bucket.
                              To use the serviceAccount, make sure the right serviceAccount
                              has proper IAM roles.
                            properties:
                              key:
                                description: key defines the name of the key in secret
                                  the CredentialStoreConfigRef refers to Make sure
                                  to configure the right keys for a given cloud provider
                                  type. More information about the value of the key
                                  can be found https://docs.confluent.io/platform/current/kafka/tiered-storage.html
                                  Internally it configures the right properties to
                                  load credentials form broker's server.properties.
                                  Make sure to read the cloud providers mechanism
                                  to use the right keys.
                                minLength: 1
                                type: string
                              name:
                                description: name defines the name of the CredentialStoreRef
                                minLength: 1
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          endpoint:
                            description: endpoint defines the S3 object endpoint's
                              fully qualified domain name Use this to any object storage
                              that works with AWS S3 API
                            minLength: 1
                            pattern: ^https?://.*
                            type: string
                          forcePathStyle:
                            description: forcePathStyle configures the client to use
                              path-style access for all requests. Setting this parameter
                              to true enables path style access.
                            type: boolean
                        required:
                        - bucketName
                        - bucketRegion
                        - endpoint
                        type: object
                    required:
                    - backendType
                    type: object
                  providerType:
                    allOf:
                    - enum:
                      - deployment
                      - blueprint
                    - enum:
                      - deployment
                      - blueprint
                    description: providerType describes where the configuration comes
                      from. The supported values are `deployment` and `blueprint`
                    type: string
                required:
                - providerType
                type: object
              metaDataService:
                description: metaDataService defines MDS settings for RBAC CP settings.
                properties:
                  identityProviderType:
                    description: identityProviderType is the type of identity provider
                      used by MDS. Valid options is `ldap`.
                    enum:
                    - ldap
                    minLength: 1
                    type: string
                  tokenKeyPair:
                    description: tokenKeyPair specifies the token keypair to configure
                      the MDS.
                    properties:
                      publicKey:
                        description: publicKey specifies the public key of the MDS
                          token key pair
                        properties:
                          blueprint:
                            description: blueprint defines the key at the blueprint
                              layer and cannot be overridden by deployments. This
                              key will be used by all the deployments using this blueprint
                            properties:
                              credentialStoreRef:
                                description: credentialStoreRef specifies the key
                                  in the credentialStoreConfig resource
                                properties:
                                  key:
                                    description: key defines the name of the key in
                                      CredentialStoreConfigRef refers to
                                    type: string
                                  name:
                                    description: name defines the name of the CredentialStoreRef
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - credentialStoreRef
                            type: object
                          providerType:
                            allOf:
                            - enum:
                              - deployment
                              - blueprint
                            - enum:
                              - blueprint
                            description: providerType defines the provider for the
                              CredentialStoreConfig resource. Valid option is `blueprint`
                            type: string
                        required:
                        - blueprint
                        - providerType
                        type: object
                      tokenKey:
                        description: tokenKey specifies the private key of the MDS
                          token key pair
                        properties:
                          blueprint:
                            description: blueprint defines the key at the blueprint
                              layer and cannot be overridden by deployments. This
                              key will be used by all the deployments using this blueprint
                            properties:
                              credentialStoreRef:
                                description: credentialStoreRef specifies the key
                                  in the credentialStoreConfig resource
                                properties:
                                  key:
                                    description: key defines the name of the key in
                                      CredentialStoreConfigRef refers to
                                    type: string
                                  name:
                                    description: name defines the name of the CredentialStoreRef
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - credentialStoreRef
                            type: object
                          providerType:
                            allOf:
                            - enum:
                              - deployment
                              - blueprint
                            - enum:
                              - blueprint
                            description: providerType defines the provider for the
                              CredentialStoreConfig resource. Valid option is `blueprint`
                            type: string
                        required:
                        - blueprint
                        - providerType
                        type: object
                    required:
                    - publicKey
                    - tokenKey
                    type: object
                required:
                - identityProviderType
                - tokenKeyPair
                type: object
              passwordEncoder:
                description: passwordEncoder defines how Confluent passwords are encoded
                properties:
                  blueprint:
                    description: blueprintKey defines the key at the blueprint layer
                      and cannot be overridden by deployments. This key will be used
                      by all the deployments using this blueprint
                    properties:
                      credentialStoreRefs:
                        description: credentialStoreRefs refers to the credential
                          stores containing keys for password encoders
                        properties:
                          forKafka:
                            description: forKafka specifies the password encoder credentialStoreConfig
                              resource for kafka
                            properties:
                              key:
                                description: key defines the name of the key in CredentialStoreConfigRef
                                  refers to
                                type: string
                              name:
                                description: name defines the name of the CredentialStoreRef
                                type: string
                            required:
                            - name
                            type: object
                          forSchemaRegistry:
                            description: forSchemaRegistry specifies the password
                              encoder credentialStoreConfig resource for Schema Registry
                            properties:
                              key:
                                description: key defines the name of the key in CredentialStoreConfigRef
                                  refers to
                                type: string
                              name:
                                description: name defines the name of the CredentialStoreRef
                                type: string
                            required:
                            - name
                            type: object
                        type: object
                    type: object
                  deployment:
                    description: deploymentKey defines the key at the deployment layer.
                      The Cluster APIs provide the secret containing this key.
                    properties:
                      credentialStoreRefs:
                        description: credentialStoreRefs refers to the credential
                          stores containing keys for password encoders
                        properties:
                          forKafka:
                            description: forKafka specifies the password encoder credentialStoreConfig
                              resource for kafka
                            properties:
                              key:
                                description: key defines the name of the key in thee
                                  CredentialStoreConfigRef refers to
                                type: string
                            required:
                            - key
                            type: object
                          forSchemaRegistry:
                            description: forSchemaRegistry specifies the password
                              encoder credentialStoreConfig resource for Schema Registry
                            properties:
                              key:
                                description: key defines the name of the key in thee
                                  CredentialStoreConfigRef refers to
                                type: string
                            required:
                            - key
                            type: object
                        type: object
                    type: object
                  providerType:
                    allOf:
                    - enum:
                      - deployment
                      - blueprint
                    - enum:
                      - blueprint
                      - deployment
                    description: providerType defines the provider for the CredentialStoreConfig.
                      Valid options are `blueprint` and `deployment`
                    type: string
                required:
                - providerType
                type: object
            required:
            - components
            - confluentPlatform
            type: object
          status:
            description: ConfluentPlatformBlueprintStatus defines the observed state
              of ConfluentPlatformBlueprint
            properties:
              connectClusterClassVersion:
                description: connectClusterClassVersion defines the version of ConnectClusterClass
                  applied to its clusters.
                format: int64
                type: integer
              controlCenterClusterClassVersion:
                description: controlCenterClusterClassVersion defines the version
                  of ControlCenterClusterClass applied to its clusters.
                format: int64
                type: integer
              kafkaClusterClassVersion:
                description: kafkaClusterClassVersion defines the version of KafkaClusterClass
                  applied to its clusters.
                format: int64
                type: integer
              kafkaRestProxyClusterClassVersion:
                description: kafkaRestProxyClusterClassVersion defines the version
                  of KafkaRestProxyClusterClass applied to its clusters.
                format: int64
                type: integer
              ksqlDBClusterClassVersion:
                description: ksqlDBClusterClassVersion defines the version of KsqlDBClusterClass
                  applied to its clusters.
                format: int64
                type: integer
              phase:
                default: Unknown
                description: phase describes the state of the ConfluentPlatformBlueprint.
                type: string
              schemaRegistryClusterClassVersion:
                description: schemaRegistryClusterClassVersion defines the version
                  of SchemaRegistryClusterClass applied to its clusters.
                format: int64
                type: integer
              zookeeperClusterClassVersion:
                description: zookeeperClusterClassVersion defines the version of ZookeeperClusterClass
                  applied to its clusters.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
