---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: kafkaclusters.cluster.cpc.platform.confluent.io
spec:
  group: cluster.cpc.platform.confluent.io
  names:
    categories:
    - all
    - confluent
    - cpc
    - cpccluster
    kind: KafkaCluster
    listKind: KafkaClusterList
    plural: kafkaclusters
    shortNames:
    - kc
    - kafkacluster
    singular: kafkacluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.ready
      name: Ready
      type: string
    - jsonPath: .status.clusterState
      name: Cluster-State
      type: string
    - jsonPath: .status.kubernetesCluster
      name: K8s
      type: string
    - jsonPath: .status.confluentPlatformBlueprint
      name: Blueprint
      type: string
    - jsonPath: .status.remoteNamespacedName
      name: Remote-Cluster
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: KafkaCluster is the Schema for the kafkaclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KafkaClusterSpec defines the desired state of KafkaCluster
            properties:
              blueprintRef:
                description: blueprintRef defines which blueprint cluster should use.
                properties:
                  name:
                    description: name is the name of the object
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  namespace:
                    description: Namespace is the namespace of the object. Defaults
                      to the current namespace of the object making the reference
                      to.
                    maxLength: 255
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - name
                type: object
              credentialStoreConfigRef:
                description: credentialStoreConfigRef references the CredentialStoreConfig
                  CR that manages credentials across CP
                properties:
                  name:
                    description: name is the name of the object
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  namespace:
                    description: Namespace is the namespace of the object. Defaults
                      to the current namespace of the object making the reference
                      to.
                    maxLength: 255
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - name
                type: object
              dataVolumeCapacity:
                anyOf:
                - type: integer
                - type: string
                description: dataVolumeCapacity will resize the existing volume. If
                  value is less or greater than the value the configured by the class
                  (platform administrator) then the request will be rejected. The
                  webhook will be in place to let user know if the request will be
                  denied
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              debug:
                description: debug provides capability to add debug settings for CP
                  component. Note - Only use for debugging purpose.
                properties:
                  log4j:
                    description: log4j is a list of Log4J configuration supported
                      by the Confluent Platform component. This takes precedence over
                      blueprint log4J field.
                    items:
                      type: string
                    minItems: 1
                    type: array
                type: object
              dependencies:
                description: dependencies describes the services which kafka has a
                  client dependency on
                properties:
                  mdsClusterRef:
                    description: mdsClusterRef is the cluster which Kafka will use
                      for metadata. This will be the primary MDS.
                    properties:
                      name:
                        description: name is the name of the object
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                      namespace:
                        description: Namespace is the namespace of the object. Defaults
                          to the current namespace of the object making the reference
                          to.
                        maxLength: 255
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    required:
                    - name
                    type: object
                  metricsReporter:
                    description: metricsReporter configures where to send metrics
                      to.
                    properties:
                      kafkaClusterRef:
                        description: kafkaClusterRef is the cluster which the metrics
                          reporter will report metrics to.
                        properties:
                          name:
                            description: name is the name of the object
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          namespace:
                            description: Namespace is the namespace of the object.
                              Defaults to the current namespace of the object making
                              the reference to.
                            maxLength: 255
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                        required:
                        - name
                        type: object
                    type: object
                  schemaRegistryClusterRef:
                    description: schemaRegistryClusterRef is the cluster which will
                      be used to enforce schema validation.
                    properties:
                      name:
                        description: name is the name of the object
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                      namespace:
                        description: Namespace is the namespace of the object. Defaults
                          to the current namespace of the object making the reference
                          to.
                        maxLength: 255
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    required:
                    - name
                    type: object
                  zookeeperClusterRef:
                    description: zookeeperClusterRef specifies the dependency configuration
                      for Zookeeper.
                    properties:
                      name:
                        description: name is the name of the object
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                      namespace:
                        description: Namespace is the namespace of the object. Defaults
                          to the current namespace of the object making the reference
                          to.
                        maxLength: 255
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    required:
                    - name
                    type: object
                type: object
              externalAccess:
                description: externalAccess specifies Kafka external access configurations.
                properties:
                  kafkaRest:
                    description: kafkaRest specifies the external access configurations
                      for Kafka Rest endpoint. For the CP RBAC scenario, this configures
                      MDS server external access.
                    properties:
                      dnsConfig:
                        description: dnsConfig specifies the DNS configurations for
                          Kafka Rest endpoints.
                        properties:
                          subdomain:
                            description: subdomain specifies the subdomain for the
                              cluster FQDN.
                            minLength: 1
                            type: string
                        type: object
                      tlsConfig:
                        description: tlsConfig specifies the tls certificate configuration
                          for external communication. Only apply to certificate provider
                          type `deployment`.
                        properties:
                          certificateStoreConfigRef:
                            description: certificateStoreConfigRef specifies the reference
                              to CertificateStoreConfig.
                            properties:
                              name:
                                description: name is the name of the object
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                              namespace:
                                description: Namespace is the namespace of the object.
                                  Defaults to the current namespace of the object
                                  making the reference to.
                                maxLength: 255
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - certificateStoreConfigRef
                        type: object
                    type: object
                  listeners:
                    description: listeners specifies the external access configurations
                      for Kafka listeners.
                    properties:
                      custom:
                        description: custom defines the list of KafkaListenerExternalAccess
                          configuration.
                        items:
                          properties:
                            dnsConfig:
                              description: dnsConfig specifies the DNS configuration
                                for Kafka Listener external access. This is required
                                if subdomain provider type is deployment in blueprint.
                              properties:
                                bootstrapSubdomain:
                                  description: bootstrapSubdomain specifies the subdomain
                                    for the Kafka bootstrap advertised endpoint. This
                                    is required if subdomain provider type is deployment
                                    in blueprint.
                                  minLength: 1
                                  type: string
                                brokerSubdomain:
                                  description: brokerSubdomain specifies the subdomain
                                    for the Kafka broker advertised endpoint. This
                                    is required if subdomain provider type is deployment
                                    in blueprint.
                                  minLength: 1
                                  type: string
                              type: object
                            name:
                              description: name specifies the name of the custom listener.
                                `internal`, `external`, `replication` and `token`
                                are reserved and can't be used for this property.
                              maxLength: 30
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                            principalMappingRules:
                              description: principalMappingRules defines the expression
                                to extract principal from a certificate. Only works
                                if the authentication type mtls mandated by a blueprint.
                              items:
                                type: string
                              minItems: 1
                              type: array
                            tlsConfig:
                              description: tlsConfig specifies the tls certificate
                                configuration for external communication. Only apply
                                to certificate provider type `deployment`.
                              properties:
                                certificateStoreConfigRef:
                                  description: certificateStoreConfigRef specifies
                                    the reference to CertificateStoreConfig.
                                  properties:
                                    name:
                                      description: name is the name of the object
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                    namespace:
                                      description: Namespace is the namespace of the
                                        object. Defaults to the current namespace
                                        of the object making the reference to.
                                      maxLength: 255
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                  required:
                                  - name
                                  type: object
                              required:
                              - certificateStoreConfigRef
                              type: object
                          required:
                          - name
                          type: object
                        minItems: 1
                        type: array
                      external:
                        description: external specifies the configuration for Kafka
                          external listener external access.
                        properties:
                          dnsConfig:
                            description: dnsConfig specifies the DNS configuration
                              for Kafka Listener external access. This is required
                              if subdomain provider type is deployment in blueprint.
                            properties:
                              bootstrapSubdomain:
                                description: bootstrapSubdomain specifies the subdomain
                                  for the Kafka bootstrap advertised endpoint. This
                                  is required if subdomain provider type is deployment
                                  in blueprint.
                                minLength: 1
                                type: string
                              brokerSubdomain:
                                description: brokerSubdomain specifies the subdomain
                                  for the Kafka broker advertised endpoint. This is
                                  required if subdomain provider type is deployment
                                  in blueprint.
                                minLength: 1
                                type: string
                            type: object
                          principalMappingRules:
                            description: principalMappingRules defines the expression
                              to extract principal from a certificate. Only works
                              if the authentication type mtls mandated by a blueprint.
                            items:
                              type: string
                            minItems: 1
                            type: array
                          tlsConfig:
                            description: tlsConfig specifies the tls certificate configuration
                              for external communication. Only apply to certificate
                              provider type `deployment`.
                            properties:
                              certificateStoreConfigRef:
                                description: certificateStoreConfigRef specifies the
                                  reference to CertificateStoreConfig.
                                properties:
                                  name:
                                    description: name is the name of the object
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  namespace:
                                    description: Namespace is the namespace of the
                                      object. Defaults to the current namespace of
                                      the object making the reference to.
                                    maxLength: 255
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - certificateStoreConfigRef
                            type: object
                        type: object
                    type: object
                type: object
              k8sClusterRef:
                description: k8sClusterRef references to kubernetes clusters where
                  connect going to be deployed. Needs to be specified when cluster
                  is provisioned by cfk.
                properties:
                  name:
                    description: name is the name of the object
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  namespace:
                    description: Namespace is the namespace of the object. Defaults
                      to the current namespace of the object making the reference
                      to.
                    maxLength: 255
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - name
                type: object
              kafkaTieredStorage:
                description: kafkaTieredStorage configures tiered storage configuration
                  for the Kafka Cluster.
                properties:
                  aws:
                    description: aws defines configuration to connect bucket in for
                      AWS.
                    properties:
                      bucketName:
                        description: bucketName defines the name of the S3 bucket
                          A Kafka broker interacts with this bucket for writing and
                          reading tiered data.
                        minLength: 1
                        type: string
                      bucketRegion:
                        description: bucketRegion defines the region of S3 bucket
                          The region cannot be empty
                        minLength: 1
                        type: string
                      credentialStoreRef:
                        description: credentialStoreRef configures the credential
                          to connect to the backend configured. If this is not configured,
                          it assumes serviceAccount mode of access the bucket. To
                          use the serviceAccount, make sure the right serviceAccount
                          has proper IAM roles. credentialStoreRef specifies the key
                          in the cluster's credential store
                        properties:
                          key:
                            description: key defines the name of the key in thee CredentialStoreConfigRef
                              refers to
                            type: string
                        required:
                        - key
                        type: object
                      forcePathStyle:
                        description: forcePathStyle configures the client to use path-style
                          access for all requests. Setting this parameter to true
                          enables path style access.
                        type: boolean
                    required:
                    - bucketName
                    - bucketRegion
                    type: object
                  backendType:
                    allOf:
                    - enum:
                      - aws
                      - gcp
                      - other
                    - enum:
                      - aws
                      - gcp
                      - other
                    description: backendType refers to cloud services where kafka
                      will connect to. The supported values are `aws`, `gcp` & `other`.
                      For `other` type can accommodate any cloud provider that supports
                      Amazon S3 APIs. More information can be found here, https://docs.confluent.io/platform/current/kafka/tiered-storage.html
                    type: string
                  gcp:
                    description: gcp defines configuration to connect bucket in for
                      GCS.
                    properties:
                      bucketName:
                        description: bucketName defines the name of the S3 bucket
                          A Kafka broker interacts with this bucket for writing and
                          reading tiered data.
                        minLength: 1
                        type: string
                      bucketRegion:
                        description: bucketRegion defines the region of S3 bucket
                          The region cannot be empty
                        minLength: 1
                        type: string
                      credentialStoreRef:
                        description: credentialStoreRef configures the credential
                          to connect to the backend configured. If this is not configured,
                          it assumes serviceAccount mode of access the bucket. To
                          use the serviceAccount, make sure the right serviceAccount
                          has proper IAM roles. credentialStoreRef specifies the key
                          in the cluster's credential store
                        properties:
                          key:
                            description: key defines the name of the key in thee CredentialStoreConfigRef
                              refers to
                            type: string
                        required:
                        - key
                        type: object
                      forcePathStyle:
                        description: forcePathStyle configures the client to use path-style
                          access for all requests. Setting this parameter to true
                          enables path style access.
                        type: boolean
                    required:
                    - bucketName
                    - bucketRegion
                    type: object
                  other:
                    description: other defines configuration to connect bucket in
                      for cloud providers other than gcs/aws. The bucket will be access
                      through Amazon S3 APIs.
                    properties:
                      bucketName:
                        description: bucketName defines the name of the S3 bucket
                          A Kafka broker interacts with this bucket for writing and
                          reading tiered data.
                        minLength: 1
                        type: string
                      bucketRegion:
                        description: bucketRegion defines the region of S3 bucket
                          The region cannot be empty
                        minLength: 1
                        type: string
                      credentialStoreRef:
                        description: credentialStoreRef configures the credential
                          to connect to the backend configured. If this is not configured,
                          it assumes serviceAccount mode of access the bucket. To
                          use the serviceAccount, make sure the right serviceAccount
                          has proper IAM roles. credentialStoreRef specifies the key
                          in the cluster's credential store
                        properties:
                          key:
                            description: key defines the name of the key in thee CredentialStoreConfigRef
                              refers to
                            type: string
                        required:
                        - key
                        type: object
                      endpoint:
                        description: endpoint defines the S3 object endpoint's fully
                          qualified domain name Use this to any object storage that
                          works with AWS S3 API
                        minLength: 1
                        pattern: ^https?://.*
                        type: string
                      forcePathStyle:
                        description: forcePathStyle configures the client to use path-style
                          access for all requests. Setting this parameter to true
                          enables path style access.
                        type: boolean
                    required:
                    - bucketName
                    - bucketRegion
                    - endpoint
                    type: object
                required:
                - backendType
                type: object
              placements:
                description: placements specifies rules for scheduling of pods
                properties:
                  affinity:
                    description: 'affinity specifies a group of affinity scheduling
                      rules. More info: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity.'
                    properties:
                      nodeAffinity:
                        description: Describes node affinity scheduling rules for
                          the pod.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node matches the corresponding matchExpressions;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches
                                all objects with implicit weight 0 (i.e. it's a no-op).
                                A null preferred scheduling term matches no objects
                                (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-map-type: atomic
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from
                              its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      podAffinity:
                        description: Describes pod affinity scheduling rules (e.g.
                          co-locate this pod in the same node, zone, etc. as some
                          other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaceSelector:
                                      description: A label query over the set of namespaces
                                        that the term applies to. The term is applied
                                        to the union of the namespaces selected by
                                        this field and the ones listed in the namespaces
                                        field. null selector and null or empty namespaces
                                        list means "this pod's namespace". An empty
                                        selector ({}) matches all namespaces.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: namespaces specifies a static list
                                        of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces
                                        listed in this field and the ones selected
                                        by namespaceSelector. null or empty namespaces
                                        list and null namespaceSelector means "this
                                        pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to a pod label update),
                              the system may or may not try to eventually evict the
                              pod from its node. When there are multiple elements,
                              the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                      podAntiAffinity:
                        description: Describes pod anti-affinity scheduling rules
                          (e.g. avoid putting this pod in the same node, zone, etc.
                          as some other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the anti-affinity expressions
                              specified by this field, but it may choose a node that
                              violates one or more of the expressions. The node that
                              is most preferred is the one with the greatest sum of
                              weights, i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              anti-affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaceSelector:
                                      description: A label query over the set of namespaces
                                        that the term applies to. The term is applied
                                        to the union of the namespaces selected by
                                        this field and the ones listed in the namespaces
                                        field. null selector and null or empty namespaces
                                        list means "this pod's namespace". An empty
                                        selector ({}) matches all namespaces.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: namespaces specifies a static list
                                        of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces
                                        listed in this field and the ones selected
                                        by namespaceSelector. null or empty namespaces
                                        list and null namespaceSelector means "this
                                        pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the anti-affinity requirements specified
                              by this field are not met at scheduling time, the pod
                              will not be scheduled onto the node. If the anti-affinity
                              requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod
                              label update), the system may or may not try to eventually
                              evict the pod from its node. When there are multiple
                              elements, the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                    type: object
                  tolerations:
                    description: tolerations specify the pods to schedule onto the
                      nodes with matching taints, using the triple `<key,value,effect>`
                      and the matching operator `<operator>`.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  topologySpreadConstraints:
                    description: topologySpreadConstraints describe how a group of
                      pods ought to spread across topology domains. Scheduler will
                      schedule pods based on the constraints. All topologySpreadConstraints
                      are ANDed.
                    items:
                      description: TopologySpreadConstraint specifies how to spread
                        matching pods among the given topology.
                      properties:
                        labelSelector:
                          description: LabelSelector is used to find matching pods.
                            Pods that match this label selector are counted to determine
                            the number of pods in their corresponding topology domain.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        matchLabelKeys:
                          description: MatchLabelKeys is a set of pod label keys to
                            select the pods over which spreading will be calculated.
                            The keys are used to lookup values from the incoming pod
                            labels, those key-value labels are ANDed with labelSelector
                            to select the group of existing pods over which spreading
                            will be calculated for the incoming pod. Keys that don't
                            exist in the incoming pod labels will be ignored. A null
                            or empty list means only match against labelSelector.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        maxSkew:
                          description: 'MaxSkew describes the degree to which pods
                            may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`,
                            it is the maximum permitted difference between the number
                            of matching pods in the target topology and the global
                            minimum. The global minimum is the minimum number of matching
                            pods in an eligible domain or zero if the number of eligible
                            domains is less than MinDomains. For example, in a 3-zone
                            cluster, MaxSkew is set to 1, and pods with the same labelSelector
                            spread as 2/2/1: In this case, the global minimum is 1.
                            | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | -
                            if MaxSkew is 1, incoming pod can only be scheduled to
                            zone3 to become 2/2/2; scheduling it onto zone1(zone2)
                            would make the ActualSkew(3-1) on zone1(zone2) violate
                            MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled
                            onto any zone. When `whenUnsatisfiable=ScheduleAnyway`,
                            it is used to give higher precedence to topologies that
                            satisfy it. It''s a required field. Default value is 1
                            and 0 is not allowed.'
                          format: int32
                          type: integer
                        minDomains:
                          description: "MinDomains indicates a minimum number of eligible
                            domains. When the number of eligible domains with matching
                            topology keys is less than minDomains, Pod Topology Spread
                            treats \"global minimum\" as 0, and then the calculation
                            of Skew is performed. And when the number of eligible
                            domains with matching topology keys equals or greater
                            than minDomains, this value has no effect on scheduling.
                            As a result, when the number of eligible domains is less
                            than minDomains, scheduler won't schedule more than maxSkew
                            Pods to those domains. If value is nil, the constraint
                            behaves as if MinDomains is equal to 1. Valid values are
                            integers greater than 0. When value is not nil, WhenUnsatisfiable
                            must be DoNotSchedule. \n For example, in a 3-zone cluster,
                            MaxSkew is set to 2, MinDomains is set to 5 and pods with
                            the same labelSelector spread as 2/2/2: | zone1 | zone2
                            | zone3 | |  P P  |  P P  |  P P  | The number of domains
                            is less than 5(MinDomains), so \"global minimum\" is treated
                            as 0. In this situation, new pod with the same labelSelector
                            cannot be scheduled, because computed skew will be 3(3
                            - 0) if new Pod is scheduled to any of the three zones,
                            it will violate MaxSkew. \n This is a beta field and requires
                            the MinDomainsInPodTopologySpread feature gate to be enabled
                            (enabled by default)."
                          format: int32
                          type: integer
                        nodeAffinityPolicy:
                          description: "NodeAffinityPolicy indicates how we will treat
                            Pod's nodeAffinity/nodeSelector when calculating pod topology
                            spread skew. Options are: - Honor: only nodes matching
                            nodeAffinity/nodeSelector are included in the calculations.
                            - Ignore: nodeAffinity/nodeSelector are ignored. All nodes
                            are included in the calculations. \n If this value is
                            nil, the behavior is equivalent to the Honor policy. This
                            is a alpha-level feature enabled by the NodeInclusionPolicyInPodTopologySpread
                            feature flag."
                          type: string
                        nodeTaintsPolicy:
                          description: "NodeTaintsPolicy indicates how we will treat
                            node taints when calculating pod topology spread skew.
                            Options are: - Honor: nodes without taints, along with
                            tainted nodes for which the incoming pod has a toleration,
                            are included. - Ignore: node taints are ignored. All nodes
                            are included. \n If this value is nil, the behavior is
                            equivalent to the Ignore policy. This is a alpha-level
                            feature enabled by the NodeInclusionPolicyInPodTopologySpread
                            feature flag."
                          type: string
                        topologyKey:
                          description: TopologyKey is the key of node labels. Nodes
                            that have a label with this key and identical values are
                            considered to be in the same topology. We consider each
                            <key, value> as a "bucket", and try to put balanced number
                            of pods into each bucket. We define a domain as a particular
                            instance of a topology. Also, we define an eligible domain
                            as a domain whose nodes meet the requirements of nodeAffinityPolicy
                            and nodeTaintsPolicy. e.g. If TopologyKey is "kubernetes.io/hostname",
                            each Node is a domain of that topology. And, if TopologyKey
                            is "topology.kubernetes.io/zone", each zone is a domain
                            of that topology. It's a required field.
                          type: string
                        whenUnsatisfiable:
                          description: 'WhenUnsatisfiable indicates how to deal with
                            a pod if it doesn''t satisfy the spread constraint. -
                            DoNotSchedule (default) tells the scheduler not to schedule
                            it. - ScheduleAnyway tells the scheduler to schedule the
                            pod in any location, but giving higher precedence to topologies
                            that would help reduce the skew. A constraint is considered
                            "Unsatisfiable" for an incoming pod if and only if every
                            possible node assignment for that pod would violate "MaxSkew"
                            on some topology. For example, in a 3-zone cluster, MaxSkew
                            is set to 1, and pods with the same labelSelector spread
                            as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   |
                            If WhenUnsatisfiable is set to DoNotSchedule, incoming
                            pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2)
                            as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1).
                            In other words, the cluster can still be imbalanced, but
                            scheduler won''t make it *more* imbalanced. It''s a required
                            field.'
                          type: string
                      required:
                      - maxSkew
                      - topologyKey
                      - whenUnsatisfiable
                      type: object
                    type: array
                type: object
              rackAssignment:
                description: rackAssignment specifies the rack awareness capability
                  of the Kafka cluster using the underlying Kubernetes Infrastructure.
                  This field takes precedence over the rack assignment field in the
                  blueprint.
                properties:
                  nodeLabels:
                    description: nodeLabels use the Kubernetes node API to retrieve
                      the label values to be used in `broker.rack` setting.
                    items:
                      type: string
                    minItems: 1
                    type: array
                required:
                - nodeLabels
                type: object
              replicas:
                description: replicas is the number of replicas for the cluster. If
                  configured, the value will be checked against the blueprint's max
                  replicas. If not, it will use the default configured in blueprint.
                format: int32
                minimum: 1
                type: integer
              resourceMetadata:
                description: resourceMetadata defines metadata overrides for the cluster
                  on remote clusters
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: annotations adds annotations on the represented resources
                      of this cluster in cluster
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: labels appends labels on the represented resources
                      of this cluster in cluster.
                    type: object
                  overrideName:
                    description: overrideName allows overriding metadata.name of this
                      resource on the remote cluster
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  overrideNamespace:
                    description: overrideNamespace allows overriding metadata.namespace
                      of this resource on the remote cluster
                    maxLength: 255
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                type: object
            required:
            - blueprintRef
            type: object
          status:
            description: KafkaClusterStatus defines the observed state of KafkaCluster
            properties:
              brokerOffsetInterval:
                description: brokerOffsetInterval is the offset interval for the kafka
                  broker numbers.
                type: string
              classGeneration:
                description: classGeneration is the generation version of the cluster
                  class referenced from the deployment.
                format: int64
                type: integer
              clusterClass:
                description: clusterClass is the namespaced name of the ClusterClass
                  that this deployment object is referencing to.
                type: string
              clusterState:
                default: Unknown
                description: clusterState is the state of the cluster.
                type: string
              conditions:
                description: conditions specify the latest available observations
                  of the current state.
                items:
                  description: Condition represents the latest available observations
                    of the current state.
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime shows the last time the condition
                        was transitioned from one status to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: lastUpdateTime shows the last time the condition
                        was evaluated.
                      format: date-time
                      type: string
                    message:
                      description: message shows a human-readable message with details
                        about the transition.
                      type: string
                    reason:
                      description: reason shows the reason for the last transition
                        of the condition.
                      type: string
                    status:
                      description: status shows the status of the condition, one of
                        `True`, `False`, or `Unknown`.
                      type: string
                    type:
                      description: type shows the condition type.
                      type: string
                  required:
                  - type
                  type: object
                type: array
              confluentPlatformBlueprint:
                description: confluentPlatformBlueprint is the namespaced name of
                  the confluentPlatformBlueprint referenced from the deployment.
                type: string
              confluentPlatformBlueprintGeneration:
                description: confluentPlatformBlueprintGeneration is the generation
                  version of the confluentPlatformBlueprint referenced from the deployment.
                format: int64
                type: integer
              currentReplicas:
                description: currentReplicas is the number of currently running replicas.
                format: int32
                type: integer
              dataVolumeSize:
                anyOf:
                - type: integer
                - type: string
                description: dataVolumeSize describes the volume size in use by the
                  application.
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              fipsEnabled:
                default: false
                description: fipsEnabled specifies whether this is a FIPS enabled
                  Kafka cluster
                type: boolean
              internalSecretName:
                description: internalSecretName is the name of the CPC internal secret
                  created for this cluster.
                type: string
              kafkaClusterID:
                description: kafkaClusterID is the cluster-id of the kafka-cluster
                type: string
              kafkaRestClassName:
                description: kafkaRestClassName references to internal kafkaRestClass
                  name
                type: string
              kafkaRestRef:
                description: kafkaRestRef is the status for Kafka Rest APIs or MDS.
                properties:
                  externalAccess:
                    description: externalAccess is the status of Kafka Rest external
                      Access.
                    properties:
                      advertisedExternalEndpoint:
                        description: advertisedExternalEndpoint is the advertised
                          endpoint for the http server of this cluster.
                        properties:
                          dnsEndpoint:
                            description: dnsEndpoint is the endpoint with FQDN and
                              port number, with format `<FQDN>:<port>`.
                            type: string
                          ipAddress:
                            description: ipAddress is the assigned ip address for
                              the FQDN.
                            type: string
                          url:
                            description: url is the URL endpoint. The format is `http|s://<FQDN>:<port>`.
                            minLength: 1
                            pattern: ^https?://.*
                            type: string
                        type: object
                      type:
                        description: type is the external access type.
                        enum:
                        - loadBalancer
                        - ingress
                        - route
                        type: string
                    type: object
                  tls:
                    description: tls shows whether TLS is configured for the Kafka
                      Rest endpoint.
                    properties:
                      certificateStoreConfig:
                        description: certificateStoreConfig specifies the name of
                          certificateStoreConfig which is being used.
                        type: string
                      enabled:
                        description: enabled specifies whether tls is enabled.
                        type: boolean
                    type: object
                type: object
              kubernetesCluster:
                description: kubernetesCluster is the namespaced name of the  kubernetesCluster
                  CR that is the deployment is provisioned to.
                type: string
              listeners:
                description: listeners are the list of Kafka listener Statuses.
                items:
                  properties:
                    externalAccess:
                      description: externalAccess is the external access status of
                        this listener.
                      properties:
                        advertisedExternalEndpoint:
                          description: advertisedExternalEndpoint is the advertised
                            endpoint for this listener.
                          properties:
                            bootstrap:
                              description: bootstrap is the bootstrap advertised endpoint.
                              properties:
                                dnsEndpoint:
                                  description: dnsEndpoint is the endpoint with FQDN
                                    and port number, with format `<FQDN>:<port>`.
                                  type: string
                                ipAddress:
                                  description: ipAddress is the assigned ip address
                                    for the FQDN.
                                  type: string
                              type: object
                            broker:
                              description: broker is the list of broker advertised
                                endpoint.
                              items:
                                properties:
                                  dnsEndpoint:
                                    description: dnsEndpoint is the endpoint with
                                      FQDN and port number, with format `<FQDN>:<port>`.
                                    type: string
                                  ipAddress:
                                    description: ipAddress is the assigned ip address
                                      for the FQDN.
                                    type: string
                                  name:
                                    description: name is the broker name.
                                    type: string
                                type: object
                              minItems: 1
                              type: array
                          type: object
                        type:
                          description: type is the external access type.
                          enum:
                          - loadBalancer
                          - ingress
                          - route
                          type: string
                      type: object
                    name:
                      description: name is the listener name.
                      type: string
                    tls:
                      description: tls shows whether TLS is configured for the listener.
                      properties:
                        certificateStoreConfig:
                          description: certificateStoreConfig specifies the name of
                            certificateStoreConfig which is being used.
                          type: string
                        enabled:
                          description: enabled specifies whether tls is enabled.
                          type: boolean
                      type: object
                  type: object
                type: array
              maxReplicas:
                description: maxReplicas is the max number of replicas.
                format: int32
                type: integer
              mountedSecrets:
                description: mountedSecrets are the status for the mounted secrets.
                items:
                  description: MountedSecretStatus defines the status for the mounted
                    secret.
                  properties:
                    credentialStoreConfig:
                      description: credentialStoreConfig is the name of the credentialStoreConfig,
                        where the mounted secret is from.
                      type: string
                    filePaths:
                      description: filePaths are the file paths for the mounted credentials.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              observedGeneration:
                description: observedGeneration is the most recent generation observed
                  for this cluster.
                format: int64
                type: integer
              passwordEncoder:
                description: passwordEncoder whether passwordEncoder is enabled this
                  feature must be enabled for clusterlink to work.
                type: boolean
              phase:
                default: Unknown
                description: phase describes whether the internal state is generated.
                  Values are Bound, Pending and Unknown.
                type: string
              provisionerType:
                description: provisionerType is the type of underlying resource for
                  the cluster
                enum:
                - cfk
                - ccloud
                type: string
              ready:
                description: 'ready is the number of ready replicas based on the desired
                  replicas. The value is in the following format: `readyReplicas/replicas`.'
                type: string
              readyReplicas:
                description: readyReplicas is the number of currently ready replicas.
                format: int32
                type: integer
              remoteNamespacedName:
                description: remoteNamespacedName is the namespaced name of the cluster
                  that is created from the deployment.
                type: string
              replicas:
                description: replicas is the number of replicas.
                format: int32
                type: integer
              schemaRegistryClusterRef:
                description: schemaRegistryClusterRef references schemaRegistry cluster
                type: string
              zookeeperClusterRef:
                description: zookeeperClusterRef references zookeeper cluster
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      scale:
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.replicas
      status: {}
